--
-- Create Schema Script 
--   Database Version   : 9.2.0.6.0 
--   Schema             : HELIUM 
--   Script Created by  : HELIUM 
--   Script Created at  :  
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Indexes: 107       Columns: 138        
--   Sequences: 1 
--   Tables: 75         Columns: 618        Constraints: 245    

CREATE TABLE HEL_ACL_CLASS
(
  ID     NUMBER(19)                             NOT NULL,
  CLASS  VARCHAR2(255 CHAR)                     NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ACL_ENTRY
(
  ID                   NUMBER(19)               NOT NULL,
  ACE_ORDER            NUMBER(10)               NOT NULL,
  AUDIT_FAILURE        NUMBER(1)                NOT NULL,
  AUDIT_SUCCESS        NUMBER(1)                NOT NULL,
  GRANTING             NUMBER(1)                NOT NULL,
  MASK                 NUMBER(10)               NOT NULL,
  ACL_OBJECT_IDENTITY  NUMBER(19),
  SID                  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ACL_OBJECT_IDENTITY
(
  ID                  NUMBER(19)                NOT NULL,
  ENTRIES_INHERITING  NUMBER(1)                 NOT NULL,
  OBJECT_ID_IDENTITY  NUMBER(19)                NOT NULL,
  OBJECT_ID_CLASS     NUMBER(19),
  OWNER_SID           NUMBER(19),
  PARENT_OBJECT       NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ACL_SID
(
  ID         NUMBER(19)                         NOT NULL,
  PRINCIPAL  NUMBER(1),
  SID        VARCHAR2(100 CHAR)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ACTION_LOG
(
  ID          NUMBER(19)                        NOT NULL,
  ACCIO       VARCHAR2(255 CHAR)                NOT NULL,
  COLUMNA_PK  VARCHAR2(255 CHAR)                NOT NULL,
  DATA        TIMESTAMP(6)                      NOT NULL,
  TAULA       VARCHAR2(255 CHAR)                NOT NULL,
  USUARI      VARCHAR2(255 CHAR)                NOT NULL,
  VALORS      VARCHAR2(255 CHAR)                NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_AREA
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL,
  ENTORN_ID   NUMBER(19)                        NOT NULL,
  PARE_ID     NUMBER(19),
  TIPUS_ID    NUMBER(19)                        NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_AREA_MEMBRE
(
  ID       NUMBER(19)                           NOT NULL,
  CODI     VARCHAR2(64 CHAR)                    NOT NULL,
  AREA_ID  NUMBER(19)                           NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_AREA_TIPUS
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL,
  ENTORN_ID   NUMBER(19)                        NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CAMP
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DOMINI_CAMP_TEXT     VARCHAR2(64 CHAR),
  DOMINI_CAMP_VALOR    VARCHAR2(64 CHAR),
  DOMINI_PARAMID       VARCHAR2(255 CHAR),
  DOMINI_PARAMS        VARCHAR2(255 CHAR),
  ETIQUETA             VARCHAR2(255 CHAR)       NOT NULL,
  MULTIPLE             NUMBER(1),
  OBSERVACIONS         VARCHAR2(255 CHAR),
  OCULT                NUMBER(1),
  TIPUS                NUMBER(10)               NOT NULL,
  CAMP_AGRUPACIO_ID    NUMBER(19),
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL,
  DOMINI_ID            NUMBER(19),
  ENUMERACIO_ID        NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CAMP_AGRUP
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DESCRIPCIO           VARCHAR2(255 CHAR),
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  ORDRE                NUMBER(10),
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CAMP_REGISTRE
(
  ID           NUMBER(19)                       NOT NULL,
  LLISTAR      NUMBER(1),
  OBLIGATORI   NUMBER(1),
  ORDRE        NUMBER(10),
  MEMBRE_ID    NUMBER(19)                       NOT NULL,
  REGISTRE_ID  NUMBER(19)                       NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CAMP_TASCA
(
  ID        NUMBER(19)                          NOT NULL,
  ORDRE     NUMBER(10),
  RF        NUMBER(1),
  RO        NUMBER(1),
  RQ        NUMBER(1),
  WT        NUMBER(1),
  CAMP_ID   NUMBER(19)                          NOT NULL,
  TASCA_ID  NUMBER(19)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CARREC
(
  ID               NUMBER(19)                   NOT NULL,
  CODI             VARCHAR2(64 CHAR)            NOT NULL,
  DESCRIPCIO       VARCHAR2(255 CHAR),
  NOM_DONA         VARCHAR2(255 CHAR)           NOT NULL,
  NOM_HOME         VARCHAR2(255 CHAR)           NOT NULL,
  PERSONA_CODI     VARCHAR2(64 CHAR),
  PERSONA_SEXE     NUMBER(10),
  CARREC_DONA      VARCHAR2(255 CHAR)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR2(255 CHAR)           NOT NULL,
  AREA_ID          NUMBER(19)                   NOT NULL,
  ENTORN_ID        NUMBER(19)                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CARREC_JBPMID
(
  ID               NUMBER(19)                   NOT NULL,
  CODI             VARCHAR2(64 CHAR)            NOT NULL,
  DESCRIPCIO       VARCHAR2(255 CHAR),
  NOM_DONA         VARCHAR2(255 CHAR)           NOT NULL,
  NOM_HOME         VARCHAR2(255 CHAR)           NOT NULL,
  PERSONA_SEXE     NUMBER(10),
  CARREC_DONA      VARCHAR2(255 CHAR)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR2(255 CHAR)           NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CONSULTA
(
  ID                  NUMBER(19)                NOT NULL,
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  DESCRIPCIO          VARCHAR2(255 CHAR),
  GENERICA            NUMBER(1),
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)                NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_CONSULTA_CAMP
(
  ID               NUMBER(19)                   NOT NULL,
  CAMP_CODI        VARCHAR2(64 CHAR)            NOT NULL,
  DEFPROC_JBPMKEY  VARCHAR2(255 CHAR),
  DEFPROC_VERSIO   NUMBER(10),
  ORDRE            NUMBER(10),
  TIPUS            NUMBER(10)                   NOT NULL,
  CONSULTA_ID      NUMBER(19)                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_DEFINICIO_PROCES
(
  ID                  NUMBER(19)                NOT NULL,
  DATACREACIO         TIMESTAMP(6)              NOT NULL,
  ETIQUETA            VARCHAR2(64 CHAR),
  JBPM_ID             VARCHAR2(255 CHAR)        NOT NULL,
  JBPM_KEY            VARCHAR2(255 CHAR)        NOT NULL,
  VERSIO              NUMBER(10),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_DOCUMENT
(
  ID                     NUMBER(19)             NOT NULL,
  ARXIU_CONTINGUT        BLOB,
  ARXIU_NOM              VARCHAR2(255 CHAR),
  CODI                   VARCHAR2(64 CHAR)      NOT NULL,
  CONTENT_TYPE           VARCHAR2(255 CHAR),
  CUSTODIA_CODI          VARCHAR2(255 CHAR),
  DESCRIPCIO             VARCHAR2(255 CHAR),
  NOM                    VARCHAR2(255 CHAR)     NOT NULL,
  PLANTILLA              NUMBER(1),
  PORTASIGNATURES_ID     NUMBER(19),
  TIPUS_PORTASIGNATURES  NUMBER(10),
  CAMP_DATA_ID           NUMBER(19),
  DEFINICIO_PROCES_ID    NUMBER(19)             NOT NULL
)
LOB (ARXIU_CONTINGUT) STORE AS HEL_DOCUMENT_CONT_LOB (
    TABLESPACE HELIUM_LOB
    INDEX HEL_DOCUMENT_CONT_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_DOCUMENT_STORE
(
  ID                   NUMBER(19)               NOT NULL,
  ADJUNT               NUMBER(1),
  ADJUNT_TITOL         VARCHAR2(255 CHAR),
  ARXIU_CONTINGUT      BLOB,
  ARXIU_NOM            VARCHAR2(255 CHAR)       NOT NULL,
  DATA_CREACIO         TIMESTAMP(6)             NOT NULL,
  DATA_DOCUMENT        DATE                     NOT NULL,
  DATA_MODIFICACIO     TIMESTAMP(6)             NOT NULL,
  FONT                 NUMBER(10)               NOT NULL,
  JBPM_VARIABLE        VARCHAR2(255 CHAR)       NOT NULL,
  PROCESS_INSTANCE_ID  VARCHAR2(64 CHAR)        NOT NULL,
  REF_CUSTODIA         VARCHAR2(255 CHAR),
  REF_FONT             VARCHAR2(255 CHAR),
  SIGNAT               NUMBER(1)
)
LOB (ARXIU_CONTINGUT) STORE AS HEL_DOCSTORE_CONT_LOB (
    TABLESPACE HELIUM_LOB
    INDEX HEL_DOCSTORE_CONT_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_DOCUMENT_TASCA
(
  ID           NUMBER(19)                       NOT NULL,
  ORDRE        NUMBER(10),
  RO           NUMBER(1),
  RQ           NUMBER(1),
  DOCUMENT_ID  NUMBER(19)                       NOT NULL,
  TASCA_ID     NUMBER(19)                       NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_DOMINI
(
  ID                  NUMBER(19)                NOT NULL,
  CACHE_SEGONS        NUMBER(10),
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  DESCRIPCIO          VARCHAR2(255 CHAR),
  JNDI_DATASOURCE     VARCHAR2(255 CHAR),
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ORDRE_PARAMS        VARCHAR2(255 CHAR),
  SQLEXPR             VARCHAR2(1024 CHAR),
  TIPUS               NUMBER(10)                NOT NULL,
  URL                 VARCHAR2(255 CHAR),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ENTORN
(
  ID          NUMBER(19)                        NOT NULL,
  ACTIU       NUMBER(1),
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ENUMERACIO
(
  ID         NUMBER(19)                         NOT NULL,
  CODI       VARCHAR2(64 CHAR)                  NOT NULL,
  NOM        VARCHAR2(255 CHAR)                 NOT NULL,
  VALORS     VARCHAR2(1024 CHAR),
  ENTORN_ID  NUMBER(19)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_ESTAT
(
  ID                  NUMBER(19)                NOT NULL,
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ORDRE               NUMBER(10)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)                NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_EXPEDIENT
(
  ID                   NUMBER(19)               NOT NULL,
  COMENTARI            VARCHAR2(255 CHAR),
  DATA_FI              TIMESTAMP(6),
  DATA_INICI           TIMESTAMP(6)             NOT NULL,
  INFO_ATURAT          VARCHAR2(1024 CHAR),
  INICIADOR_CODI       VARCHAR2(64 CHAR),
  INICIADOR_TIPUS      NUMBER(10),
  NUMERO               VARCHAR2(64 CHAR),
  NUMERO_DEFAULT       VARCHAR2(64 CHAR),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR)       NOT NULL,
  RESPONSABLE_CODI     VARCHAR2(64 CHAR),
  TITOL                VARCHAR2(255 CHAR),
  ENTORN_ID            NUMBER(19)               NOT NULL,
  ESTAT_ID             NUMBER(19),
  TIPUS_ID             NUMBER(19)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_EXPEDIENT_RELS
(
  ORIGEN_ID  NUMBER(19)                         NOT NULL,
  DESTI_ID   NUMBER(19)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_EXPEDIENT_TIPUS
(
  ID                NUMBER(19)                  NOT NULL,
  ANY_ACTUAL        NUMBER(10),
  CODI              VARCHAR2(64 CHAR)           NOT NULL,
  DEMANA_NUMERO     NUMBER(1),
  DEMANA_TITOL      NUMBER(1),
  EXPRESSIO_NUMERO  VARCHAR2(255 CHAR),
  JBPM_PD_KEY       VARCHAR2(255 CHAR),
  NOM               VARCHAR2(255 CHAR)          NOT NULL,
  REINICIAR_ANUAL   NUMBER(1),
  RESPDEFAULT_CODI  VARCHAR2(64 CHAR),
  SEQUENCIA         NUMBER(19),
  SEQUENCIA_DEF     NUMBER(19),
  SISTRA_CODTRA     VARCHAR2(64 CHAR),
  SISTRA_MAPCAMPS   VARCHAR2(1024 CHAR),
  SISTRA_MAPDOCS    VARCHAR2(1024 CHAR),
  TE_NUMERO         NUMBER(1),
  TE_TITOL          NUMBER(1),
  ENTORN_ID         NUMBER(19)                  NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_FESTIU
(
  ID    NUMBER(19)                              NOT NULL,
  DATA  DATE                                    NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_FIRMA_TASCA
(
  ID           NUMBER(19)                       NOT NULL,
  ORDRE        NUMBER(10),
  RQ           NUMBER(1),
  DOCUMENT_ID  NUMBER(19)                       NOT NULL,
  TASCA_ID     NUMBER(19)                       NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_FORMEXT
(
  ID               NUMBER(19)                   NOT NULL,
  DATA_DARRPET     TIMESTAMP(6),
  DATA_INICI       TIMESTAMP(6)                 NOT NULL,
  DATA_RECDADES    TIMESTAMP(6),
  DATA_FORMHEIGHT  NUMBER(10),
  DATA_FORMWIDTH   NUMBER(10),
  FORMID           VARCHAR2(255 CHAR)           NOT NULL,
  TASKID           VARCHAR2(255 CHAR)           NOT NULL,
  URL              VARCHAR2(1024 CHAR)          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_IDGEN
(
  TAULA  VARCHAR2(255 CHAR),
  VALOR  NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_INDEX
(
  NAME_     VARCHAR2(50 CHAR)                   NOT NULL,
  VALUE_    BLOB,
  SIZE_     NUMBER(10),
  LF_       TIMESTAMP(6),
  DELETED_  NUMBER(1)
)
LOB (VALUE_) STORE AS HEL_INDEX_CONT_LOB (
    TABLESPACE HELIUM_LOB
    INDEX HEL_INDEX_CONT_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_PERMIS
(
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_PERSONA
(
  ID              NUMBER(19)                    NOT NULL,
  AVIS_CORREU     NUMBER(1)                     NOT NULL,
  CODI            VARCHAR2(64 CHAR)             NOT NULL,
  DATA_NAIXEMENT  DATE,
  DNI             VARCHAR2(64 CHAR),
  EMAIL           VARCHAR2(255 CHAR),
  FONT            NUMBER(10),
  LLINATGE1       VARCHAR2(255 CHAR)            NOT NULL,
  LLINATGE2       VARCHAR2(255 CHAR),
  LLINATGES       VARCHAR2(255 CHAR),
  NOM             VARCHAR2(255 CHAR)            NOT NULL,
  NOM_SENCER      VARCHAR2(255 CHAR),
  SEXE            NUMBER(10)                    NOT NULL,
  RELLEU_ID       NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_PORTASIGNATURES
(
  ID                 NUMBER(19)                 NOT NULL,
  DATA_ENVIAT        TIMESTAMP(6),
  DOCUMENT_ID        NUMBER(10)                 NOT NULL,
  DOCUMENT_STORE_ID  NUMBER(19),
  ESTAT              NUMBER(10),
  MOTIU_REBUIG       VARCHAR2(255 CHAR),
  TOKEN_ID           NUMBER(19)                 NOT NULL,
  TRANSICIO_KO       VARCHAR2(255 CHAR),
  TRANSICIO_OK       VARCHAR2(255 CHAR),
  TRANSICIO          NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_REGISTRE
(
  ID                   NUMBER(19)               NOT NULL,
  ACCIO                NUMBER(10)               NOT NULL,
  DATA                 TIMESTAMP(6)             NOT NULL,
  ENTITAT              NUMBER(10)               NOT NULL,
  ENTITAT_ID           VARCHAR2(255 CHAR)       NOT NULL,
  EXPEDIENT_ID         NUMBER(19)               NOT NULL,
  MISSATGE             VARCHAR2(1024 CHAR),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR),
  RESPONSABLE_CODI     VARCHAR2(64 CHAR)        NOT NULL,
  VALOR_NOU            VARCHAR2(1024 CHAR),
  VALOR_VELL           VARCHAR2(1024 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_TASCA
(
  ID                   NUMBER(19)               NOT NULL,
  EXPRESSIO_DELEGACIO  VARCHAR2(255 CHAR),
  FORM_EXTERN          VARCHAR2(255 CHAR),
  JBPM_NAME            VARCHAR2(255 CHAR)       NOT NULL,
  MISSATGE_INFO        VARCHAR2(255 CHAR),
  MISSATGE_WARN        VARCHAR2(255 CHAR),
  NOM                  VARCHAR2(255 CHAR),
  NOM_SCRIPT           VARCHAR2(1024 CHAR),
  RECURS_FORM          VARCHAR2(255 CHAR),
  TIPUS                NUMBER(10)               NOT NULL,
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_TERMINI
(
  ID                   NUMBER(19)               NOT NULL,
  ANYS                 NUMBER(10),
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DESCRIPCIO           VARCHAR2(255 CHAR),
  DIES                 NUMBER(10),
  LABORABLE            NUMBER(1),
  MANUAL               NUMBER(1),
  MESOS                NUMBER(10),
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_TERMINI_INICIAT
(
  ID                   NUMBER(19)               NOT NULL,
  DATA_ATURADA         DATE,
  DATA_CANCEL          DATE,
  DATA_FI              DATE                     NOT NULL,
  DATA_INICI           DATE                     NOT NULL,
  DIES_ATURAT          NUMBER(10),
  JBPM_VARIABLE        VARCHAR2(255 CHAR),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR)       NOT NULL,
  TIMER_NAME           VARCHAR2(255 CHAR),
  TERMINI_ID           NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_USUARI
(
  CODI         VARCHAR2(64 CHAR)                NOT NULL,
  ACTIU        NUMBER(1)                        NOT NULL,
  CONTRASENYA  VARCHAR2(255 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_USUARI_PERMIS
(
  CODI    VARCHAR2(64 CHAR)                     NOT NULL,
  PERMIS  VARCHAR2(64 CHAR)                     NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_USUARI_PREFS
(
  CODI            VARCHAR2(64 CHAR)             NOT NULL,
  DEFAULT_ENTORN  VARCHAR2(64 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_VALIDACIO
(
  ID         NUMBER(19)                         NOT NULL,
  EXPRESSIO  VARCHAR2(1024 CHAR)                NOT NULL,
  MISSATGE   VARCHAR2(255 CHAR)                 NOT NULL,
  NOM        VARCHAR2(255 CHAR),
  ORDRE      NUMBER(10)                         NOT NULL,
  CAMP_ID    NUMBER(19),
  TASCA_ID   NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE HEL_VERSIO
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  ORDRE       NUMBER(10)                        NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE SEQUENCE HIBERNATE_SEQUENCE
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE TABLE JBPM_ACTION
(
  ID_                     NUMBER(19)            NOT NULL,
  CLASS                   CHAR(1 CHAR)          NOT NULL,
  NAME_                   VARCHAR2(255 CHAR),
  ISPROPAGATIONALLOWED_   NUMBER(1),
  ACTIONEXPRESSION_       VARCHAR2(255 CHAR),
  ISASYNC_                NUMBER(1),
  REFERENCEDACTION_       NUMBER(19),
  ACTIONDELEGATION_       NUMBER(19),
  EVENT_                  NUMBER(19),
  PROCESSDEFINITION_      NUMBER(19),
  EXPRESSION_             CLOB,
  TIMERNAME_              VARCHAR2(255 CHAR),
  DUEDATE_                VARCHAR2(255 CHAR),
  REPEAT_                 VARCHAR2(255 CHAR),
  TRANSITIONNAME_         VARCHAR2(255 CHAR),
  TIMERACTION_            NUMBER(19),
  EVENTINDEX_             NUMBER(10),
  EXCEPTIONHANDLER_       NUMBER(19),
  EXCEPTIONHANDLERINDEX_  NUMBER(10)
)
LOB (EXPRESSION_) STORE AS JBPM_ACTION_EXPR_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_ACTION_EXPR_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_BYTEARRAY
(
  ID_              NUMBER(19)                   NOT NULL,
  NAME_            VARCHAR2(255 CHAR),
  FILEDEFINITION_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_BYTEBLOCK
(
  PROCESSFILE_  NUMBER(19)                      NOT NULL,
  BYTES_        RAW(1024),
  INDEX_        NUMBER(10)                      NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_COMMENT
(
  ID_                 NUMBER(19)                NOT NULL,
  VERSION_            NUMBER(10)                NOT NULL,
  ACTORID_            VARCHAR2(255 CHAR),
  TIME_               TIMESTAMP(6),
  MESSAGE_            CLOB,
  TOKEN_              NUMBER(19),
  TASKINSTANCE_       NUMBER(19),
  TOKENINDEX_         NUMBER(10),
  TASKINSTANCEINDEX_  NUMBER(10)
)
LOB (MESSAGE_) STORE AS JBPM_COMMENT_MESSG_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_COMMENT_MESSG_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_DECISIONCONDITIONS
(
  DECISION_        NUMBER(19)                   NOT NULL,
  TRANSITIONNAME_  VARCHAR2(255 CHAR),
  EXPRESSION_      VARCHAR2(255 CHAR),
  INDEX_           NUMBER(10)                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_DELEGATION
(
  ID_                 NUMBER(19)                NOT NULL,
  CLASSNAME_          CLOB,
  CONFIGURATION_      CLOB,
  CONFIGTYPE_         VARCHAR2(255 CHAR),
  PROCESSDEFINITION_  NUMBER(19)
)
LOB (CLASSNAME_) STORE AS JBPM_DELEGATION_CLASSN_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_DELEGATION_CLASSN_LOB_I)
LOB (CONFIGURATION_) STORE AS JBPM_DELEGATION_CONF_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_DELEGATION_CONF_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_EVENT
(
  ID_                 NUMBER(19)                NOT NULL,
  EVENTTYPE_          VARCHAR2(255 CHAR),
  TYPE_               CHAR(1 CHAR),
  GRAPHELEMENT_       NUMBER(19),
  PROCESSDEFINITION_  NUMBER(19),
  NODE_               NUMBER(19),
  TRANSITION_         NUMBER(19),
  TASK_               NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_EXCEPTIONHANDLER
(
  ID_                  NUMBER(19)               NOT NULL,
  EXCEPTIONCLASSNAME_  CLOB,
  TYPE_                CHAR(1 CHAR),
  GRAPHELEMENT_        NUMBER(19),
  PROCESSDEFINITION_   NUMBER(19),
  GRAPHELEMENTINDEX_   NUMBER(10),
  NODE_                NUMBER(19),
  TRANSITION_          NUMBER(19),
  TASK_                NUMBER(19)
)
LOB (EXCEPTIONCLASSNAME_) STORE AS JBPM_EXCHANDL_EXCLASSN_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_EXCHANDL_EXCLASSN_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_ID_GROUP
(
  ID_      NUMBER(19)                           NOT NULL,
  CLASS_   CHAR(1 CHAR)                         NOT NULL,
  NAME_    VARCHAR2(255 CHAR),
  TYPE_    VARCHAR2(255 CHAR),
  PARENT_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_ID_MEMBERSHIP
(
  ID_     NUMBER(19)                            NOT NULL,
  CLASS_  CHAR(1 CHAR)                          NOT NULL,
  NAME_   VARCHAR2(255 CHAR),
  ROLE_   VARCHAR2(255 CHAR),
  USER_   NUMBER(19),
  GROUP_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_ID_PERMISSIONS
(
  ENTITY_  NUMBER(19)                           NOT NULL,
  CLASS_   VARCHAR2(255 CHAR),
  NAME_    VARCHAR2(255 CHAR),
  ACTION_  VARCHAR2(255 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_ID_USER
(
  ID_        NUMBER(19)                         NOT NULL,
  CLASS_     CHAR(1 CHAR)                       NOT NULL,
  NAME_      VARCHAR2(255 CHAR),
  EMAIL_     VARCHAR2(255 CHAR),
  PASSWORD_  VARCHAR2(255 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_JOB
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  DUEDATE_           TIMESTAMP(6),
  PROCESSINSTANCE_   NUMBER(19),
  TOKEN_             NUMBER(19),
  TASKINSTANCE_      NUMBER(19),
  ISSUSPENDED_       NUMBER(1),
  ISEXCLUSIVE_       NUMBER(1),
  LOCKOWNER_         VARCHAR2(255 CHAR),
  LOCKTIME_          TIMESTAMP(6),
  EXCEPTION_         CLOB,
  RETRIES_           NUMBER(10),
  NAME_              VARCHAR2(255 CHAR),
  REPEAT_            VARCHAR2(255 CHAR),
  TRANSITIONNAME_    VARCHAR2(255 CHAR),
  ACTION_            NUMBER(19),
  GRAPHELEMENTTYPE_  VARCHAR2(255 CHAR),
  GRAPHELEMENT_      NUMBER(19),
  NODE_              NUMBER(19)
)
LOB (EXCEPTION_) STORE AS JBPM_JOB_EXCEP_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_JOB_EXCEP_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_LOG
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  INDEX_             NUMBER(10),
  DATE_              TIMESTAMP(6),
  TOKEN_             NUMBER(19),
  PARENT_            NUMBER(19),
  MESSAGE_           CLOB,
  EXCEPTION_         CLOB,
  ACTION_            NUMBER(19),
  NODE_              NUMBER(19),
  ENTER_             TIMESTAMP(6),
  LEAVE_             TIMESTAMP(6),
  DURATION_          NUMBER(19),
  NEWLONGVALUE_      NUMBER(19),
  TRANSITION_        NUMBER(19),
  CHILD_             NUMBER(19),
  SOURCENODE_        NUMBER(19),
  DESTINATIONNODE_   NUMBER(19),
  VARIABLEINSTANCE_  NUMBER(19),
  OLDBYTEARRAY_      NUMBER(19),
  NEWBYTEARRAY_      NUMBER(19),
  OLDDATEVALUE_      TIMESTAMP(6),
  NEWDATEVALUE_      TIMESTAMP(6),
  OLDDOUBLEVALUE_    FLOAT(126),
  NEWDOUBLEVALUE_    FLOAT(126),
  OLDLONGIDCLASS_    VARCHAR2(255 CHAR),
  OLDLONGIDVALUE_    NUMBER(19),
  NEWLONGIDCLASS_    VARCHAR2(255 CHAR),
  NEWLONGIDVALUE_    NUMBER(19),
  OLDSTRINGIDCLASS_  VARCHAR2(255 CHAR),
  OLDSTRINGIDVALUE_  VARCHAR2(255 CHAR),
  NEWSTRINGIDCLASS_  VARCHAR2(255 CHAR),
  NEWSTRINGIDVALUE_  VARCHAR2(255 CHAR),
  OLDLONGVALUE_      NUMBER(19),
  OLDSTRINGVALUE_    CLOB,
  NEWSTRINGVALUE_    CLOB,
  TASKINSTANCE_      NUMBER(19),
  TASKACTORID_       VARCHAR2(255 CHAR),
  TASKOLDACTORID_    VARCHAR2(255 CHAR),
  SWIMLANEINSTANCE_  NUMBER(19)
)
LOB (MESSAGE_) STORE AS JBPM_LOG_MESSAGE_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_LOG_MESSAGE_LOB_I)
LOB (EXCEPTION_) STORE AS JBPM_LOG_EXCEP_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_LOG_EXCEP_LOB_I)
LOB (OLDSTRINGVALUE_) STORE AS JBPM_LOG_OLDSTRVAL_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_LOG_OLDSTRVAL_LOB_I)
LOB (NEWSTRINGVALUE_) STORE AS JBPM_LOG_NEWSTRVAL_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_LOG_NEWSTRVAL_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_MODULEDEFINITION
(
  ID_                 NUMBER(19)                NOT NULL,
  CLASS_              CHAR(1 CHAR)              NOT NULL,
  NAME_               VARCHAR2(255 CHAR),
  PROCESSDEFINITION_  NUMBER(19),
  STARTTASK_          NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_MODULEINSTANCE
(
  ID_                  NUMBER(19)               NOT NULL,
  CLASS_               CHAR(1 CHAR)             NOT NULL,
  VERSION_             NUMBER(10)               NOT NULL,
  PROCESSINSTANCE_     NUMBER(19),
  TASKMGMTDEFINITION_  NUMBER(19),
  NAME_                VARCHAR2(255 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_NODE
(
  ID_                    NUMBER(19)             NOT NULL,
  CLASS_                 CHAR(1 CHAR)           NOT NULL,
  NAME_                  VARCHAR2(255 CHAR),
  DESCRIPTION_           CLOB,
  PROCESSDEFINITION_     NUMBER(19),
  ISASYNC_               NUMBER(1),
  ISASYNCEXCL_           NUMBER(1),
  ACTION_                NUMBER(19),
  SUPERSTATE_            NUMBER(19),
  SUBPROCNAME_           VARCHAR2(255 CHAR),
  SUBPROCESSDEFINITION_  NUMBER(19),
  DECISIONEXPRESSION_    VARCHAR2(255 CHAR),
  DECISIONDELEGATION     NUMBER(19),
  SCRIPT_                NUMBER(19),
  PARENTLOCKMODE_        VARCHAR2(255 CHAR),
  SIGNAL_                NUMBER(10),
  CREATETASKS_           NUMBER(1),
  ENDTASKS_              NUMBER(1),
  NODECOLLECTIONINDEX_   NUMBER(10)
)
LOB (DESCRIPTION_) STORE AS JBPM_NODE_DESC_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_NODE_DESC_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_POOLEDACTOR
(
  ID_                NUMBER(19)                 NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  ACTORID_           VARCHAR2(255 CHAR),
  SWIMLANEINSTANCE_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_PROCESSDEFINITION
(
  ID_                     NUMBER(19)            NOT NULL,
  CLASS_                  CHAR(1 CHAR)          NOT NULL,
  NAME_                   VARCHAR2(255 CHAR),
  DESCRIPTION_            CLOB,
  VERSION_                NUMBER(10),
  ISTERMINATIONIMPLICIT_  NUMBER(1),
  STARTSTATE_             NUMBER(19)
)
LOB (DESCRIPTION_) STORE AS JBPM_PROCDEF_DESC_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_PROCDEF_DESC_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_PROCESSINSTANCE
(
  ID_                 NUMBER(19)                NOT NULL,
  VERSION_            NUMBER(10)                NOT NULL,
  KEY_                VARCHAR2(255 CHAR),
  START_              TIMESTAMP(6),
  END_                TIMESTAMP(6),
  ISSUSPENDED_        NUMBER(1),
  PROCESSDEFINITION_  NUMBER(19),
  ROOTTOKEN_          NUMBER(19),
  SUPERPROCESSTOKEN_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_RUNTIMEACTION
(
  ID_                    NUMBER(19)             NOT NULL,
  VERSION_               NUMBER(10)             NOT NULL,
  EVENTTYPE_             VARCHAR2(255 CHAR),
  TYPE_                  CHAR(1 CHAR),
  GRAPHELEMENT_          NUMBER(19),
  PROCESSINSTANCE_       NUMBER(19),
  ACTION_                NUMBER(19),
  PROCESSINSTANCEINDEX_  NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_SWIMLANE
(
  ID_                      NUMBER(19)           NOT NULL,
  NAME_                    VARCHAR2(255 CHAR),
  ACTORIDEXPRESSION_       VARCHAR2(255 CHAR),
  POOLEDACTORSEXPRESSION_  VARCHAR2(255 CHAR),
  ASSIGNMENTDELEGATION_    NUMBER(19),
  TASKMGMTDEFINITION_      NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_SWIMLANEINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  ACTORID_           VARCHAR2(255 CHAR),
  SWIMLANE_          NUMBER(19),
  TASKMGMTINSTANCE_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TASK
(
  ID_                      NUMBER(19)           NOT NULL,
  NAME_                    VARCHAR2(255 CHAR),
  DESCRIPTION_             CLOB,
  PROCESSDEFINITION_       NUMBER(19),
  ISBLOCKING_              NUMBER(1),
  ISSIGNALLING_            NUMBER(1),
  CONDITION_               VARCHAR2(255 CHAR),
  DUEDATE_                 VARCHAR2(255 CHAR),
  PRIORITY_                NUMBER(10),
  ACTORIDEXPRESSION_       VARCHAR2(255 CHAR),
  POOLEDACTORSEXPRESSION_  VARCHAR2(255 CHAR),
  TASKMGMTDEFINITION_      NUMBER(19),
  TASKNODE_                NUMBER(19),
  STARTSTATE_              NUMBER(19),
  ASSIGNMENTDELEGATION_    NUMBER(19),
  SWIMLANE_                NUMBER(19),
  TASKCONTROLLER_          NUMBER(19)
)
LOB (DESCRIPTION_) STORE AS JBPM_TASK_DESC_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_TASK_DESC_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TASKACTORPOOL
(
  TASKINSTANCE_  NUMBER(19)                     NOT NULL,
  POOLEDACTOR_   NUMBER(19)                     NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TASKCONTROLLER
(
  ID_                        NUMBER(19)         NOT NULL,
  TASKCONTROLLERDELEGATION_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TASKINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  DESCRIPTION_       CLOB,
  ACTORID_           VARCHAR2(255 CHAR),
  CREATE_            TIMESTAMP(6),
  START_             TIMESTAMP(6),
  END_               TIMESTAMP(6),
  DUEDATE_           TIMESTAMP(6),
  PRIORITY_          NUMBER(10),
  ISCANCELLED_       NUMBER(1),
  ISSUSPENDED_       NUMBER(1),
  ISOPEN_            NUMBER(1),
  ISSIGNALLING_      NUMBER(1),
  ISBLOCKING_        NUMBER(1),
  TASK_              NUMBER(19),
  TOKEN_             NUMBER(19),
  PROCINST_          NUMBER(19),
  SWIMLANINSTANCE_   NUMBER(19),
  TASKMGMTINSTANCE_  NUMBER(19)
)
LOB (DESCRIPTION_) STORE AS JBPM_TASKINSTANCE_DESC_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_TASKINSTANCE_DESC_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TOKEN
(
  ID_                        NUMBER(19)         NOT NULL,
  VERSION_                   NUMBER(10)         NOT NULL,
  NAME_                      VARCHAR2(255 CHAR),
  START_                     TIMESTAMP(6),
  END_                       TIMESTAMP(6),
  NODEENTER_                 TIMESTAMP(6),
  NEXTLOGINDEX_              NUMBER(10),
  ISABLETOREACTIVATEPARENT_  NUMBER(1),
  ISTERMINATIONIMPLICIT_     NUMBER(1),
  ISSUSPENDED_               NUMBER(1),
  LOCK_                      VARCHAR2(255 CHAR),
  NODE_                      NUMBER(19),
  PROCESSINSTANCE_           NUMBER(19),
  PARENT_                    NUMBER(19),
  SUBPROCESSINSTANCE_        NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TOKENVARIABLEMAP
(
  ID_               NUMBER(19)                  NOT NULL,
  VERSION_          NUMBER(10)                  NOT NULL,
  TOKEN_            NUMBER(19),
  CONTEXTINSTANCE_  NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_TRANSITION
(
  ID_                 NUMBER(19)                NOT NULL,
  NAME_               VARCHAR2(255 CHAR),
  DESCRIPTION_        CLOB,
  PROCESSDEFINITION_  NUMBER(19),
  FROM_               NUMBER(19),
  TO_                 NUMBER(19),
  CONDITION_          VARCHAR2(255 CHAR),
  FROMINDEX_          NUMBER(10)
)
LOB (DESCRIPTION_) STORE AS JBPM_TRANSITION_DESC_LOB (
    TABLESPACE HELIUM_LOB
    INDEX JBPM_TRANSITION_DESC_LOB_I)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_VARIABLEACCESS
(
  ID_              NUMBER(19)                   NOT NULL,
  VARIABLENAME_    VARCHAR2(255 CHAR),
  ACCESS_          VARCHAR2(255 CHAR),
  MAPPEDNAME_      VARCHAR2(255 CHAR),
  SCRIPT_          NUMBER(19),
  PROCESSSTATE_    NUMBER(19),
  TASKCONTROLLER_  NUMBER(19),
  INDEX_           NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


CREATE TABLE JBPM_VARIABLEINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  CONVERTER_         CHAR(1 CHAR),
  TOKEN_             NUMBER(19),
  TOKENVARIABLEMAP_  NUMBER(19),
  PROCESSINSTANCE_   NUMBER(19),
  BYTEARRAYVALUE_    NUMBER(19),
  DATEVALUE_         TIMESTAMP(6),
  DOUBLEVALUE_       FLOAT(126),
  LONGIDCLASS_       VARCHAR2(255 CHAR),
  LONGVALUE_         NUMBER(19),
  STRINGIDCLASS_     VARCHAR2(255 CHAR),
  STRINGVALUE_       VARCHAR2(255 CHAR),
  TASKINSTANCE_      NUMBER(19)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HEL_ACL_CLASS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CLASS));

ALTER TABLE HEL_ACL_ENTRY ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACL_SID ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACTION_LOG ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_AREA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_AREA_MEMBRE ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, AREA_ID));

ALTER TABLE HEL_AREA_TIPUS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_CAMP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_CAMP_AGRUP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_CAMP_REGISTRE ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (REGISTRE_ID, ORDRE),
  UNIQUE (REGISTRE_ID, MEMBRE_ID));

ALTER TABLE HEL_CAMP_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (CAMP_ID, TASCA_ID));

ALTER TABLE HEL_CARREC ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_CARREC_JBPMID ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_CONSULTA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_CONSULTA_CAMP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CONSULTA_ID, CAMP_CODI, DEFPROC_JBPMKEY, DEFPROC_VERSIO, TIPUS));

ALTER TABLE HEL_DEFINICIO_PROCES ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (JBPM_ID));

ALTER TABLE HEL_DOCUMENT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_DOCUMENT_STORE ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_DOCUMENT_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (DOCUMENT_ID, TASCA_ID));

ALTER TABLE HEL_DOMINI ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_ENTORN ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI));

ALTER TABLE HEL_ENUMERACIO ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_ESTAT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_EXPEDIENT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (PROCESS_INSTANCE_ID));

ALTER TABLE HEL_EXPEDIENT_RELS ADD (
  PRIMARY KEY
 (ORIGEN_ID, DESTI_ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI),
  UNIQUE (SISTRA_CODTRA),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_FESTIU ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (DATA));

ALTER TABLE HEL_FIRMA_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (DOCUMENT_ID, TASCA_ID));

ALTER TABLE HEL_FORMEXT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (FORMID));

ALTER TABLE HEL_INDEX ADD (
  PRIMARY KEY
 (NAME_));

ALTER TABLE HEL_PERMIS ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_PERSONA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI));

ALTER TABLE HEL_PORTASIGNATURES ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (DOCUMENT_ID, TOKEN_ID));

ALTER TABLE HEL_REGISTRE ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (JBPM_NAME, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_TERMINI ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_TERMINI_INICIAT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TERMINI_ID, PROCESS_INSTANCE_ID));

ALTER TABLE HEL_USUARI ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_USUARI_PERMIS ADD (
  PRIMARY KEY
 (CODI, PERMIS));

ALTER TABLE HEL_USUARI_PREFS ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_VALIDACIO ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_VERSIO ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI),
  UNIQUE (ORDRE));

ALTER TABLE JBPM_ACTION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_BYTEARRAY ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_BYTEBLOCK ADD (
  PRIMARY KEY
 (PROCESSFILE_, INDEX_));

ALTER TABLE JBPM_COMMENT ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_DECISIONCONDITIONS ADD (
  PRIMARY KEY
 (DECISION_, INDEX_));

ALTER TABLE JBPM_DELEGATION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_EVENT ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_EXCEPTIONHANDLER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_GROUP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_MEMBERSHIP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_USER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_JOB ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_LOG ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_MODULEDEFINITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_MODULEINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_NODE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_POOLEDACTOR ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_PROCESSDEFINITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_PROCESSINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_RUNTIMEACTION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_SWIMLANE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASK ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASKACTORPOOL ADD (
  PRIMARY KEY
 (TASKINSTANCE_, POOLEDACTOR_));

ALTER TABLE JBPM_TASKCONTROLLER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASKINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TOKEN ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TRANSITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_VARIABLEACCESS ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_VARIABLEINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE HEL_ACL_ENTRY ADD (
  CONSTRAINT HEL_ACLOBJID_ACLENTRY_FK 
 FOREIGN KEY (ACL_OBJECT_IDENTITY) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT HEL_ACLSID_ACLENTRY_FK 
 FOREIGN KEY (SID) 
 REFERENCES HEL_ACL_SID (ID));

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD (
  CONSTRAINT HEL_ACLSID_ACLOBJID_FK 
 FOREIGN KEY (OWNER_SID) 
 REFERENCES HEL_ACL_SID (ID),
  CONSTRAINT HEL_ACLOBJID_ACLOBJID_FK 
 FOREIGN KEY (PARENT_OBJECT) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT HEL_ACLCLASS_ACLOBJID_FK 
 FOREIGN KEY (OBJECT_ID_CLASS) 
 REFERENCES HEL_ACL_CLASS (ID));

ALTER TABLE HEL_AREA ADD (
  CONSTRAINT HEL_ENTORN_AREA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_AREA_AREA_FK 
 FOREIGN KEY (PARE_ID) 
 REFERENCES HEL_AREA (ID),
  CONSTRAINT HEL_AREATIPUS_AREA_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_AREA_TIPUS (ID));

ALTER TABLE HEL_AREA_MEMBRE ADD (
  CONSTRAINT HEL_AREA_AREAMEMBRE_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID));

ALTER TABLE HEL_AREA_TIPUS ADD (
  CONSTRAINT HEL_ENTORN_AREATIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID));

ALTER TABLE HEL_CAMP ADD (
  CONSTRAINT HEL_DOMINI_CAMP_FK 
 FOREIGN KEY (DOMINI_ID) 
 REFERENCES HEL_DOMINI (ID),
  CONSTRAINT HEL_DEFPROC_CAMP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
  CONSTRAINT HEL_CAMPAGRUP_CAMP_FK 
 FOREIGN KEY (CAMP_AGRUPACIO_ID) 
 REFERENCES HEL_CAMP_AGRUP (ID),
  CONSTRAINT HEL_ENUMERACIO_CAMP_FK 
 FOREIGN KEY (ENUMERACIO_ID) 
 REFERENCES HEL_ENUMERACIO (ID));

ALTER TABLE HEL_CAMP_AGRUP ADD (
  CONSTRAINT HEL_DEFPROC_CAMPAGRUP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID));

ALTER TABLE HEL_CAMP_REGISTRE ADD (
  CONSTRAINT HEL_CAMP_REGMEMBRE_FK 
 FOREIGN KEY (MEMBRE_ID) 
 REFERENCES HEL_CAMP (ID),
  CONSTRAINT HEL_CAMP_REGREGISTRE_FK 
 FOREIGN KEY (REGISTRE_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE HEL_CAMP_TASCA ADD (
  CONSTRAINT HEL_TASCA_CAMPTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_CAMP_CAMPTASCA_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE HEL_CARREC ADD (
  CONSTRAINT HEL_ENTORN_CARREC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_AREA_CARREC_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID));

ALTER TABLE HEL_CONSULTA ADD (
  CONSTRAINT HEL_ENTORN_CONSULTA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_CONSULTA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_CONSULTA_CAMP ADD (
  CONSTRAINT HEL_CONSULTA_CONCAMP_FK 
 FOREIGN KEY (CONSULTA_ID) 
 REFERENCES HEL_CONSULTA (ID));

ALTER TABLE HEL_DEFINICIO_PROCES ADD (
  CONSTRAINT HEL_ENTORN_DEFPROC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_DEFPROC_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_DOCUMENT ADD (
  CONSTRAINT HEL_DEFPROC_DOCUMENT_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
  CONSTRAINT HEL_CAMP_DOCUMENT_FK 
 FOREIGN KEY (CAMP_DATA_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE HEL_DOCUMENT_TASCA ADD (
  CONSTRAINT HEL_TASCA_DOCTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_DOCUMENT_DOCTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID));

ALTER TABLE HEL_DOMINI ADD (
  CONSTRAINT HEL_ENTORN_DOMINI_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_DOMINI_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_ENUMERACIO ADD (
  CONSTRAINT HEL_ENTORN_ENUMERACIO_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID));

ALTER TABLE HEL_ESTAT ADD (
  CONSTRAINT HEL_EXPTIPUS_ESTAT_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXPEDIENT ADD (
  CONSTRAINT HEL_ENTORN_EXPEDIENT_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_ESTAT_EXPEDIENT_FK 
 FOREIGN KEY (ESTAT_ID) 
 REFERENCES HEL_ESTAT (ID),
  CONSTRAINT HEL_EXPTIPUS_EXPEDIENT_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXPEDIENT_RELS ADD (
  CONSTRAINT FKF505106BE39AF489 
 FOREIGN KEY (DESTI_ID) 
 REFERENCES HEL_EXPEDIENT (ID),
  CONSTRAINT FKF505106B99E53506 
 FOREIGN KEY (ORIGEN_ID) 
 REFERENCES HEL_EXPEDIENT (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD (
  CONSTRAINT HEL_ENTORN_EXPTIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID));

ALTER TABLE HEL_FIRMA_TASCA ADD (
  CONSTRAINT HEL_TASCA_FIRTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_DOCUMENT_FIRTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID));

ALTER TABLE HEL_PERSONA ADD (
  CONSTRAINT HEL_RELLEU_PERSONA_FK 
 FOREIGN KEY (RELLEU_ID) 
 REFERENCES HEL_PERSONA (ID));

ALTER TABLE HEL_TASCA ADD (
  CONSTRAINT HEL_DEFPROC_TASCA_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID));

ALTER TABLE HEL_TERMINI ADD (
  CONSTRAINT HEL_DEFPROC_TERMINI_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID));

ALTER TABLE HEL_TERMINI_INICIAT ADD (
  CONSTRAINT HEL_TERMINI_TERMINIC_FK 
 FOREIGN KEY (TERMINI_ID) 
 REFERENCES HEL_TERMINI (ID));

ALTER TABLE HEL_USUARI_PERMIS ADD (
  CONSTRAINT HEL_PERMIS_USUARI_FK 
 FOREIGN KEY (CODI) 
 REFERENCES HEL_USUARI (CODI),
  CONSTRAINT HEL_USUARI_PERMIS_FK 
 FOREIGN KEY (PERMIS) 
 REFERENCES HEL_PERMIS (CODI));

ALTER TABLE HEL_VALIDACIO ADD (
  CONSTRAINT HEL_TASCA_VAIDACIO_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_CAMP_VAIDACIO_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE JBPM_ACTION ADD (
  CONSTRAINT FK_ACTION_EVENT 
 FOREIGN KEY (EVENT_) 
 REFERENCES JBPM_EVENT (ID_),
  CONSTRAINT FK_ACTION_EXPTHDL 
 FOREIGN KEY (EXCEPTIONHANDLER_) 
 REFERENCES JBPM_EXCEPTIONHANDLER (ID_),
  CONSTRAINT FK_ACTION_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_CRTETIMERACT_TA 
 FOREIGN KEY (TIMERACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_ACTION_ACTNDEL 
 FOREIGN KEY (ACTIONDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_ACTION_REFACT 
 FOREIGN KEY (REFERENCEDACTION_) 
 REFERENCES JBPM_ACTION (ID_));

ALTER TABLE JBPM_BYTEARRAY ADD (
  CONSTRAINT FK_BYTEARR_FILDEF 
 FOREIGN KEY (FILEDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_));

ALTER TABLE JBPM_BYTEBLOCK ADD (
  CONSTRAINT FK_BYTEBLOCK_FILE 
 FOREIGN KEY (PROCESSFILE_) 
 REFERENCES JBPM_BYTEARRAY (ID_));

ALTER TABLE JBPM_COMMENT ADD (
  CONSTRAINT FK_COMMENT_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_COMMENT_TSK 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_DECISIONCONDITIONS ADD (
  CONSTRAINT FK_DECCOND_DEC 
 FOREIGN KEY (DECISION_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_DELEGATION ADD (
  CONSTRAINT FK_DELEGATION_PRCD 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_));

ALTER TABLE JBPM_EVENT ADD (
  CONSTRAINT FK_EVENT_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_EVENT_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_EVENT_TRANS 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_),
  CONSTRAINT FK_EVENT_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_));

ALTER TABLE JBPM_ID_GROUP ADD (
  CONSTRAINT FK_ID_GRP_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_ID_GROUP (ID_));

ALTER TABLE JBPM_ID_MEMBERSHIP ADD (
  CONSTRAINT FK_ID_MEMSHIP_GRP 
 FOREIGN KEY (GROUP_) 
 REFERENCES JBPM_ID_GROUP (ID_),
  CONSTRAINT FK_ID_MEMSHIP_USR 
 FOREIGN KEY (USER_) 
 REFERENCES JBPM_ID_USER (ID_));

ALTER TABLE JBPM_JOB ADD (
  CONSTRAINT FK_JOB_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_JOB_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_JOB_PRINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_JOB_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_JOB_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_LOG ADD (
  CONSTRAINT FK_LOG_SOURCENODE 
 FOREIGN KEY (SOURCENODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_LOG_OLDBYTES 
 FOREIGN KEY (OLDBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_),
  CONSTRAINT FK_LOG_NEWBYTES 
 FOREIGN KEY (NEWBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_),
  CONSTRAINT FK_LOG_CHILDTOKEN 
 FOREIGN KEY (CHILD_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_LOG_DESTNODE 
 FOREIGN KEY (DESTINATIONNODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_TASKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_),
  CONSTRAINT FK_LOG_SWIMINST 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_),
  CONSTRAINT FK_LOG_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_LOG (ID_),
  CONSTRAINT FK_LOG_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_LOG_VARINST 
 FOREIGN KEY (VARIABLEINSTANCE_) 
 REFERENCES JBPM_VARIABLEINSTANCE (ID_),
  CONSTRAINT FK_LOG_TRANSITION 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_));

ALTER TABLE JBPM_MODULEDEFINITION ADD (
  CONSTRAINT FK_TSKDEF_START 
 FOREIGN KEY (STARTTASK_) 
 REFERENCES JBPM_TASK (ID_),
  CONSTRAINT FK_MODDEF_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_));

ALTER TABLE JBPM_MODULEINSTANCE ADD (
  CONSTRAINT FK_TASKMGTINST_TMD 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_),
  CONSTRAINT FK_MODINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_));

ALTER TABLE JBPM_NODE ADD (
  CONSTRAINT FK_PROCST_SBPRCDEF 
 FOREIGN KEY (SUBPROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_NODE_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_NODE_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_NODE_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_DECISION_DELEG 
 FOREIGN KEY (DECISIONDELEGATION) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_NODE_SUPERSTATE 
 FOREIGN KEY (SUPERSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_POOLEDACTOR ADD (
  CONSTRAINT FK_POOLEDACTOR_SLI 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_));

ALTER TABLE JBPM_PROCESSDEFINITION ADD (
  CONSTRAINT FK_PROCDEF_STRTSTA 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_PROCESSINSTANCE ADD (
  CONSTRAINT FK_PROCIN_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_PROCIN_ROOTTKN 
 FOREIGN KEY (ROOTTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_PROCIN_SPROCTKN 
 FOREIGN KEY (SUPERPROCESSTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_));

ALTER TABLE JBPM_RUNTIMEACTION ADD (
  CONSTRAINT FK_RTACTN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_RTACTN_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_));

ALTER TABLE JBPM_SWIMLANE ADD (
  CONSTRAINT FK_SWL_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_SWL_TSKMGMTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_));

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD (
  CONSTRAINT FK_SWIMLANEINST_TM 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_SWIMLANEINST_SL 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_));

ALTER TABLE JBPM_TASK ADD (
  CONSTRAINT FK_TSK_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_),
  CONSTRAINT FK_TASK_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_TASK_TASKNODE 
 FOREIGN KEY (TASKNODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TASK_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_TASK_STARTST 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TASK_TASKMGTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_),
  CONSTRAINT FK_TASK_SWIMLANE 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_));

ALTER TABLE JBPM_TASKACTORPOOL ADD (
  CONSTRAINT FK_TSKACTPOL_PLACT 
 FOREIGN KEY (POOLEDACTOR_) 
 REFERENCES JBPM_POOLEDACTOR (ID_),
  CONSTRAINT FK_TASKACTPL_TSKI 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_TASKCONTROLLER ADD (
  CONSTRAINT FK_TSKCTRL_DELEG 
 FOREIGN KEY (TASKCONTROLLERDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_));

ALTER TABLE JBPM_TASKINSTANCE ADD (
  CONSTRAINT FK_TSKINS_PRCINS 
 FOREIGN KEY (PROCINST_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TMINST 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_TASKINST_SLINST 
 FOREIGN KEY (SWIMLANINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_));

ALTER TABLE JBPM_TOKEN ADD (
  CONSTRAINT FK_TOKEN_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_TOKEN_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TOKEN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_TOKEN_SUBPI 
 FOREIGN KEY (SUBPROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_));

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD (
  CONSTRAINT FK_TKVARMAP_CTXT 
 FOREIGN KEY (CONTEXTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_TKVARMAP_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_));

ALTER TABLE JBPM_TRANSITION ADD (
  CONSTRAINT FK_TRANSITION_TO 
 FOREIGN KEY (TO_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TRANS_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_TRANSITION_FROM 
 FOREIGN KEY (FROM_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_VARIABLEACCESS ADD (
  CONSTRAINT FK_VARACC_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_),
  CONSTRAINT FK_VARACC_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_VARACC_PROCST 
 FOREIGN KEY (PROCESSSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_VARIABLEINSTANCE ADD (
  CONSTRAINT FK_VARINST_TK 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_VARINST_TKVARMP 
 FOREIGN KEY (TOKENVARIABLEMAP_) 
 REFERENCES JBPM_TOKENVARIABLEMAP (ID_),
  CONSTRAINT FK_VARINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_VAR_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_),
  CONSTRAINT FK_BYTEINST_ARRAY 
 FOREIGN KEY (BYTEARRAYVALUE_) 
 REFERENCES JBPM_BYTEARRAY (ID_));


CREATE PUBLIC SYNONYM HEL_ACL_CLASS FOR HEL_ACL_CLASS;
CREATE PUBLIC SYNONYM HEL_ACL_ENTRY FOR HEL_ACL_ENTRY;
CREATE PUBLIC SYNONYM HEL_ACL_OBJECT_IDENTITY FOR HEL_ACL_OBJECT_IDENTITY;
CREATE PUBLIC SYNONYM HEL_ACL_SID FOR HEL_ACL_SID;
CREATE PUBLIC SYNONYM HEL_ACTION_LOG FOR HEL_ACTION_LOG;
CREATE PUBLIC SYNONYM HEL_AREA FOR HEL_AREA;
CREATE PUBLIC SYNONYM HEL_AREA_MEMBRE FOR HEL_AREA_MEMBRE;
CREATE PUBLIC SYNONYM HEL_AREA_TIPUS FOR HEL_AREA_TIPUS;
CREATE PUBLIC SYNONYM HEL_CAMP FOR HEL_CAMP;
CREATE PUBLIC SYNONYM HEL_CAMP_AGRUP FOR HEL_CAMP_AGRUP;
CREATE PUBLIC SYNONYM HEL_CAMP_REGISTRE FOR HEL_CAMP_REGISTRE;
CREATE PUBLIC SYNONYM HEL_CAMP_TASCA FOR HEL_CAMP_TASCA;
CREATE PUBLIC SYNONYM HEL_CARREC FOR HEL_CARREC;
CREATE PUBLIC SYNONYM HEL_CARREC_JBPMID FOR HEL_CARREC_JBPMID;
CREATE PUBLIC SYNONYM HEL_CONSULTA FOR HEL_CONSULTA;
CREATE PUBLIC SYNONYM HEL_CONSULTA_CAMP FOR HEL_CONSULTA_CAMP;
CREATE PUBLIC SYNONYM HEL_DEFINICIO_PROCES FOR HEL_DEFINICIO_PROCES;
CREATE PUBLIC SYNONYM HEL_DOCUMENT FOR HEL_DOCUMENT;
CREATE PUBLIC SYNONYM HEL_DOCUMENT_STORE FOR HEL_DOCUMENT_STORE;
CREATE PUBLIC SYNONYM HEL_DOCUMENT_TASCA FOR HEL_DOCUMENT_TASCA;
CREATE PUBLIC SYNONYM HEL_DOMINI FOR HEL_DOMINI;
CREATE PUBLIC SYNONYM HEL_ENTORN FOR HEL_ENTORN;
CREATE PUBLIC SYNONYM HEL_ENUMERACIO FOR HEL_ENUMERACIO;
CREATE PUBLIC SYNONYM HEL_ESTAT FOR HEL_ESTAT;
CREATE PUBLIC SYNONYM HEL_EXPEDIENT FOR HEL_EXPEDIENT;
CREATE PUBLIC SYNONYM HEL_EXPEDIENT_RELS FOR HEL_EXPEDIENT_RELS;
CREATE PUBLIC SYNONYM HEL_EXPEDIENT_TIPUS FOR HEL_EXPEDIENT_TIPUS;
CREATE PUBLIC SYNONYM HEL_FESTIU FOR HEL_FESTIU;
CREATE PUBLIC SYNONYM HEL_FIRMA_TASCA FOR HEL_FIRMA_TASCA;
CREATE PUBLIC SYNONYM HEL_FORMEXT FOR HEL_FORMEXT;
CREATE PUBLIC SYNONYM HEL_IDGEN FOR HEL_IDGEN;
CREATE PUBLIC SYNONYM HEL_INDEX FOR HEL_INDEX;
CREATE PUBLIC SYNONYM HEL_PERMIS FOR HEL_PERMIS;
CREATE PUBLIC SYNONYM HEL_PERSONA FOR HEL_PERSONA;
CREATE PUBLIC SYNONYM HEL_PORTASIGNATURES FOR HEL_PORTASIGNATURES;
CREATE PUBLIC SYNONYM HEL_REGISTRE FOR HEL_REGISTRE;
CREATE PUBLIC SYNONYM HEL_TASCA FOR HEL_TASCA;
CREATE PUBLIC SYNONYM HEL_TERMINI FOR HEL_TERMINI;
CREATE PUBLIC SYNONYM HEL_TERMINI_INICIAT FOR HEL_TERMINI_INICIAT;
CREATE PUBLIC SYNONYM HEL_USUARI FOR HEL_USUARI;
CREATE PUBLIC SYNONYM HEL_USUARI_PERMIS FOR HEL_USUARI_PERMIS;
CREATE PUBLIC SYNONYM HEL_USUARI_PREFS FOR HEL_USUARI_PREFS;
CREATE PUBLIC SYNONYM HEL_VALIDACIO FOR HEL_VALIDACIO;
CREATE PUBLIC SYNONYM HEL_VERSIO FOR HEL_VERSIO;
CREATE PUBLIC SYNONYM HIBERNATE_SEQUENCE FOR HIBERNATE_SEQUENCE;
CREATE PUBLIC SYNONYM JBPM_ACTION FOR JBPM_ACTION;
CREATE PUBLIC SYNONYM JBPM_BYTEARRAY FOR JBPM_BYTEARRAY;
CREATE PUBLIC SYNONYM JBPM_BYTEBLOCK FOR JBPM_BYTEBLOCK;
CREATE PUBLIC SYNONYM JBPM_COMMENT FOR JBPM_COMMENT;
CREATE PUBLIC SYNONYM JBPM_DECISIONCONDITIONS FOR JBPM_DECISIONCONDITIONS;
CREATE PUBLIC SYNONYM JBPM_DELEGATION FOR JBPM_DELEGATION;
CREATE PUBLIC SYNONYM JBPM_EVENT FOR JBPM_EVENT;
CREATE PUBLIC SYNONYM JBPM_EXCEPTIONHANDLER FOR JBPM_EXCEPTIONHANDLER;
CREATE PUBLIC SYNONYM JBPM_ID_GROUP FOR JBPM_ID_GROUP;
CREATE PUBLIC SYNONYM JBPM_ID_MEMBERSHIP FOR JBPM_ID_MEMBERSHIP;
CREATE PUBLIC SYNONYM JBPM_ID_PERMISSIONS FOR JBPM_ID_PERMISSIONS;
CREATE PUBLIC SYNONYM JBPM_ID_USER FOR JBPM_ID_USER;
CREATE PUBLIC SYNONYM JBPM_JOB FOR JBPM_JOB;
CREATE PUBLIC SYNONYM JBPM_LOG FOR JBPM_LOG;
CREATE PUBLIC SYNONYM JBPM_MODULEDEFINITION FOR JBPM_MODULEDEFINITION;
CREATE PUBLIC SYNONYM JBPM_MODULEINSTANCE FOR JBPM_MODULEINSTANCE;
CREATE PUBLIC SYNONYM JBPM_NODE FOR JBPM_NODE;
CREATE PUBLIC SYNONYM JBPM_POOLEDACTOR FOR JBPM_POOLEDACTOR;
CREATE PUBLIC SYNONYM JBPM_PROCESSDEFINITION FOR JBPM_PROCESSDEFINITION;
CREATE PUBLIC SYNONYM JBPM_PROCESSINSTANCE FOR JBPM_PROCESSINSTANCE;
CREATE PUBLIC SYNONYM JBPM_RUNTIMEACTION FOR JBPM_RUNTIMEACTION;
CREATE PUBLIC SYNONYM JBPM_SWIMLANE FOR JBPM_SWIMLANE;
CREATE PUBLIC SYNONYM JBPM_SWIMLANEINSTANCE FOR JBPM_SWIMLANEINSTANCE;
CREATE PUBLIC SYNONYM JBPM_TASK FOR JBPM_TASK;
CREATE PUBLIC SYNONYM JBPM_TASKACTORPOOL FOR JBPM_TASKACTORPOOL;
CREATE PUBLIC SYNONYM JBPM_TASKCONTROLLER FOR JBPM_TASKCONTROLLER;
CREATE PUBLIC SYNONYM JBPM_TASKINSTANCE FOR JBPM_TASKINSTANCE;
CREATE PUBLIC SYNONYM JBPM_TOKEN FOR JBPM_TOKEN;
CREATE PUBLIC SYNONYM JBPM_TOKENVARIABLEMAP FOR JBPM_TOKENVARIABLEMAP;
CREATE PUBLIC SYNONYM JBPM_TRANSITION FOR JBPM_TRANSITION;
CREATE PUBLIC SYNONYM JBPM_VARIABLEACCESS FOR JBPM_VARIABLEACCESS;
CREATE PUBLIC SYNONYM JBPM_VARIABLEINSTANCE FOR JBPM_VARIABLEINSTANCE;

GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_CLASS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_ENTRY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_OBJECT_IDENTITY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_SID TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACTION_LOG TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA_MEMBRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA_TIPUS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_AGRUP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_REGISTRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CARREC TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CARREC_JBPMID TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CONSULTA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CONSULTA_CAMP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DEFINICIO_PROCES TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT_STORE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOMINI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ENTORN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ENUMERACIO TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ESTAT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT_RELS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT_TIPUS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FESTIU TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FIRMA_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FORMEXT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_IDGEN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_INDEX TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PERMIS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PERSONA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PORTASIGNATURES TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_REGISTRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TERMINI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TERMINI_INICIAT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI_PERMIS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI_PREFS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_VALIDACIO TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_VERSIO TO WWW_HELIUM;
GRANT SELECT ON HIBERNATE_SEQUENCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ACTION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_BYTEARRAY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_BYTEBLOCK TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_COMMENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_DECISIONCONDITIONS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_DELEGATION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_EVENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_EXCEPTIONHANDLER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_GROUP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_MEMBERSHIP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_PERMISSIONS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_USER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_JOB TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_LOG TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_MODULEDEFINITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_MODULEINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_NODE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_POOLEDACTOR TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_PROCESSDEFINITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_PROCESSINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_RUNTIMEACTION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_SWIMLANE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_SWIMLANEINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASK TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKACTORPOOL TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKCONTROLLER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TOKEN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TOKENVARIABLEMAP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TRANSITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_VARIABLEACCESS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_VARIABLEINSTANCE TO WWW_HELIUM;

INSERT INTO HEL_PERMIS ( CODI, DESCRIPCIO ) VALUES ( 
'HEL_ADMIN', 'Administrador'); 
INSERT INTO HEL_PERMIS ( CODI, DESCRIPCIO ) VALUES ( 
'HEL_USER', 'Usuari'); 
commit;
INSERT INTO HEL_PERSONA ( ID, AVIS_CORREU, CODI, DATA_NAIXEMENT, EMAIL, FONT, LLINATGE1, LLINATGE2,
LLINATGES, NOM, NOM_SENCER, SEXE, RELLEU_ID ) VALUES ( 
1, 0, 'admin', NULL, 'admin@helium.org', NULL, 'Administrador', NULL, 'Administrador'
, 'Usuari', 'Usuari Administrador', 0, NULL); 
commit;
INSERT INTO HEL_USUARI ( CODI, ACTIU, CONTRASENYA ) VALUES ( 
'admin', 1, '21232f297a57a5a743894a0e4a801fc3'); 
commit;
INSERT INTO HEL_USUARI_PERMIS ( CODI, PERMIS ) VALUES ( 
'admin', 'HEL_ADMIN'); 
commit;
INSERT INTO HEL_VERSIO ( ID, CODI, DESCRIPCIO, ORDRE ) VALUES ( 
1, 'inicial', NULL, 0); 
commit;
INSERT INTO HEL_IDGEN ( TAULA, VALOR ) VALUES ( 
'hel_persona', 1); 
INSERT INTO HEL_IDGEN ( TAULA, VALOR ) VALUES ( 
'hel_versio', 1); 
commit;
