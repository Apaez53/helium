--DROP TABLE HEL_ACL_ENTRY;
--DROP TABLE HEL_ACL_OBJECT_IDENTITY;
--DROP TABLE HEL_ACL_SID;
--DROP TABLE HEL_ACL_CLASS;
--DROP SEQUENCE HEL_ACL_CLASS_SEQ;
--DROP SEQUENCE HEL_ACL_ENTRY_SEQ;
--DROP SEQUENCE HEL_ACL_OBJECT_IDENTITY_SEQ;
--DROP SEQUENCE HEL_ACL_SID_SEQ;

ALTER TABLE HEL_ACL_CLASS RENAME TO OLD_ACL_CLASS;
ALTER TABLE HEL_ACL_ENTRY RENAME TO OLD_ACL_ENTRY;
ALTER TABLE HEL_ACL_OBJECT_IDENTITY RENAME TO OLD_ACL_OBJECT_IDENTITY;
ALTER TABLE HEL_ACL_SID RENAME TO OLD_ACL_SID;

--------------------------------------------------------
-- ACL_CLASS Table
--------------------------------------------------------
CREATE TABLE "HEL_ACL_CLASS" (
  "ID" NUMBER(19,0) NOT NULL,
  "CLASS" VARCHAR2(100) NOT NULL,
  PRIMARY KEY ("ID"),
  CONSTRAINT "ACL_CLASS_CLASS_UQ" UNIQUE ("CLASS")
);
 
--------------------------------------------------------
-- ACL_ENTRY Table
--------------------------------------------------------
CREATE TABLE "HEL_ACL_ENTRY" (
  "ID" NUMBER(19,0) NOT NULL,
  "ACL_OBJECT_IDENTITY" NUMBER(19,0) NOT NULL,
  "ACE_ORDER" NUMBER(19,0) NOT NULL,
  "SID" NUMBER(19,0) NOT NULL,
  "MASK" NUMBER(19,0) NOT NULL,
  "GRANTING" NUMBER(1,0) NOT NULL,
  "AUDIT_SUCCESS" NUMBER(1,0) NOT NULL,
  "AUDIT_FAILURE" NUMBER(1,0) NOT NULL,
  PRIMARY KEY ("ID"),
  CONSTRAINT "HEL_ACL_ENTRY_IDENT_ORDER_UQ" UNIQUE ("ACL_OBJECT_IDENTITY", "ACE_ORDER")
);
 
ALTER TABLE "HEL_ACL_ENTRY" ADD CONSTRAINT "HEL_ACL_ENTRY_GRANTING_CK"
  CHECK ("GRANTING" in (1,0));
ALTER TABLE "HEL_ACL_ENTRY" ADD CONSTRAINT "HEL_ACL_ENTRY_AUDIT_SUCCESS_CK"
  CHECK ("AUDIT_SUCCESS" in (1,0));
ALTER TABLE "HEL_ACL_ENTRY" ADD CONSTRAINT "HEL_ACL_ENTRY_AUDIT_FAILURE_CK"
  CHECK ("AUDIT_FAILURE" in (1,0));
 
--------------------------------------------------------
-- ACL_OBJECT_IDENTITY Table
--------------------------------------------------------
CREATE TABLE "HEL_ACL_OBJECT_IDENTITY" (
  "ID" NUMBER(19,0) NOT NULL,
  "OBJECT_ID_CLASS" NUMBER(19,0) NOT NULL,
  "OBJECT_ID_IDENTITY" NUMBER(19,0) NOT NULL,
  "PARENT_OBJECT" NUMBER(19,0),
  "OWNER_SID" NUMBER(19,0) NOT NULL,
  "ENTRIES_INHERITING" NUMBER(1,0) NOT NULL,
  PRIMARY KEY ("ID"),
  CONSTRAINT "HEL_ACL_OBJ_ID_CLASS_IDENT_UQ" UNIQUE ("OBJECT_ID_CLASS", "OBJECT_ID_IDENTITY")
);
 
ALTER TABLE "HEL_ACL_OBJECT_IDENTITY" ADD CONSTRAINT "HEL_ACL_OBJ_ID_ENTRIES_CK"
  CHECK ("ENTRIES_INHERITING" in (1,0));
 
--------------------------------------------------------
-- ACL_SID Table
--------------------------------------------------------
CREATE TABLE "HEL_ACL_SID" (
  "ID" NUMBER(19,0) NOT NULL,
  "PRINCIPAL" NUMBER(1,0) NOT NULL,
  "SID" VARCHAR2(100) NOT NULL,
  PRIMARY KEY ("ID"),
  CONSTRAINT "HEL_ACL_SID_PRINCIPAL_SID_UQ" UNIQUE ("SID", "PRINCIPAL")
);
 
ALTER TABLE "HEL_ACL_SID" ADD CONSTRAINT "HEL_ACL_SID_PRINCIPAL_CK"
  CHECK ("PRINCIPAL" in (1,0));
 
--------------------------------------------------------
-- Relationships
--------------------------------------------------------
 
ALTER TABLE "HEL_ACL_ENTRY" ADD CONSTRAINT "FK_ACL_ENTRY_ACL_OBJECT_ID"
  FOREIGN KEY ("ACL_OBJECT_IDENTITY")
  REFERENCES "HEL_ACL_OBJECT_IDENTITY" ("ID");
ALTER TABLE "HEL_ACL_ENTRY" ADD CONSTRAINT "FK_ACL_ENTRY_SID"
  FOREIGN KEY ("SID")
  REFERENCES "HEL_ACL_SID" ("ID");
 
ALTER TABLE "HEL_ACL_OBJECT_IDENTITY" ADD CONSTRAINT "FK_ACL_OBJ_ID_CLASS"
  FOREIGN KEY ("OBJECT_ID_CLASS")
  REFERENCES "HEL_ACL_CLASS" ("ID");
ALTER TABLE "HEL_ACL_OBJECT_IDENTITY" ADD CONSTRAINT "FK_ACL_OBJ_ID_PARENT"
  FOREIGN KEY ("PARENT_OBJECT")
  REFERENCES "HEL_ACL_OBJECT_IDENTITY" ("ID");
ALTER TABLE "HEL_ACL_OBJECT_IDENTITY" ADD CONSTRAINT "FK_ACL_OBJ_ID_SID"
  FOREIGN KEY ("OWNER_SID")
  REFERENCES "HEL_ACL_SID" ("ID");

--------------------------------------------------------
-- Copy from old tables
--------------------------------------------------------

INSERT INTO HEL_ACL_CLASS (ID, CLASS) SELECT ID, CLASS FROM OLD_ACL_CLASS;
INSERT INTO HEL_ACL_SID (ID, PRINCIPAL, SID) SELECT ID, PRINCIPAL, SID FROM OLD_ACL_SID;
INSERT INTO HEL_ACL_OBJECT_IDENTITY (ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,OWNER_SID,ENTRIES_INHERITING,PARENT_OBJECT) SELECT ID,OBJECT_ID_CLASS,OBJECT_ID_IDENTITY,OWNER_SID,ENTRIES_INHERITING,PARENT_OBJECT FROM OLD_ACL_OBJECT_IDENTITY;
INSERT INTO HEL_ACL_ENTRY (ID, ACL_OBJECT_IDENTITY, ACE_ORDER, SID, MASK, GRANTING, AUDIT_SUCCESS, AUDIT_FAILURE) SELECT ID, ACL_OBJECT_IDENTITY, ACE_ORDER, SID, MASK, GRANTING, AUDIT_SUCCESS, AUDIT_FAILURE FROM OLD_ACL_ENTRY;

--------------------------------------------------------
-- Create sequences
--------------------------------------------------------

DECLARE
  CURSOR C is SELECT MAX(ID)+1 FROM HEL_ACL_CLASS;
  VRESULT NUMBER;
  STMT VARCHAR2(1000);
BEGIN
  OPEN C;
  FETCH C INTO VRESULT;
  CLOSE C;
  STMT := 'CREATE SEQUENCE "HEL_ACL_CLASS_SEQ" '||
    'INCREMENT BY 1 '||
	'MAXVALUE 9999999999999999999999999999 '||
    'START WITH '|| TO_CHAR(VRESULT) ||
    ' CACHE 20 '||
    'NOORDER '||
    'NOCYCLE';
  EXECUTE IMMEDIATE STMT;
END;
/

DECLARE
  CURSOR C is SELECT MAX(ID)+1 FROM HEL_ACL_ENTRY;
  VRESULT NUMBER;
  STMT VARCHAR2(1000);
BEGIN
  OPEN C;
  FETCH C INTO VRESULT;
  CLOSE C;
  STMT := 'CREATE SEQUENCE "HEL_ACL_ENTRY_SEQ" '||
    'INCREMENT BY 1 '||
	'MAXVALUE 9999999999999999999999999999 '||
    'START WITH '|| TO_CHAR(VRESULT) ||
    ' CACHE 20 '||
    'NOORDER '||
    'NOCYCLE';
  EXECUTE IMMEDIATE STMT;
END;
/

DECLARE
  CURSOR C is SELECT MAX(ID)+1 FROM HEL_ACL_OBJECT_IDENTITY;
  VRESULT NUMBER;
  STMT VARCHAR2(1000);
BEGIN
  OPEN C;
  FETCH C INTO VRESULT;
  CLOSE C;
  STMT := 'CREATE SEQUENCE "HEL_ACL_OBJECT_IDENTITY_SEQ" '||
    'INCREMENT BY 1 '||
	'MAXVALUE 9999999999999999999999999999 '||
    'START WITH '|| TO_CHAR(VRESULT) ||
    ' CACHE 20 '||
    'NOORDER '||
    'NOCYCLE';
  EXECUTE IMMEDIATE STMT;
END;
/

DECLARE
  CURSOR C is SELECT MAX(ID)+1 FROM HEL_ACL_SID;
  VRESULT NUMBER;
  STMT VARCHAR2(1000);
BEGIN
  OPEN C;
  FETCH C INTO VRESULT;
  CLOSE C;
  STMT := 'CREATE SEQUENCE "HEL_ACL_SID_SEQ" '||
    'INCREMENT BY 1 '||
	'MAXVALUE 9999999999999999999999999999 '||
    'START WITH '|| TO_CHAR(VRESULT) ||
    ' CACHE 20 '||
    'NOORDER '||
    'NOCYCLE';
  EXECUTE IMMEDIATE STMT;
END;
/

--------------------------------------------------------
-- Triggers
--------------------------------------------------------
CREATE OR REPLACE TRIGGER "HEL_ACL_CLASS_ID"
BEFORE INSERT ON HEL_ACL_CLASS
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_CLASS_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_ENTRY_ID"
BEFORE INSERT ON HEL_ACL_ENTRY
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_ENTRY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_OBJECT_IDENTITY_ID"
BEFORE INSERT ON HEL_ACL_OBJECT_IDENTITY
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_OBJECT_IDENTITY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_SID_ID"
BEFORE INSERT ON HEL_ACL_SID
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_SID_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/

--------------------------------------------------------
-- Permesos
--------------------------------------------------------

-- CREATE PUBLIC SYNONYM HEL_ACL_CLASS FOR HEL_ACL_CLASS;
-- CREATE PUBLIC SYNONYM HEL_ACL_ENTRY FOR HEL_ACL_ENTRY;
-- CREATE PUBLIC SYNONYM HEL_ACL_OBJECT_IDENTITY FOR HEL_ACL_OBJECT_IDENTITY;
-- CREATE PUBLIC SYNONYM HEL_ACL_SID FOR HEL_ACL_SID;

GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_CLASS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_ENTRY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_OBJECT_IDENTITY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_SID TO WWW_HELIUM;

GRANT SELECT ON HEL_ACL_CLASS_SEQ TO WWW_HELIUM;
GRANT SELECT ON HEL_ACL_ENTRY_SEQ TO WWW_HELIUM;
GRANT SELECT ON HEL_ACL_OBJECT_IDENTITY_SEQ TO WWW_HELIUM;
GRANT SELECT ON HEL_ACL_SID_SEQ TO WWW_HELIUM;
