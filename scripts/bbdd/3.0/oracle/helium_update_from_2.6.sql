ALTER TABLE HEL_USUARI_PREFS
ADD ( CABECERA_REDUCIDA NUMBER(1) NULL  ) 
ADD ( LISTADO NUMBER(1) NULL  ) 
ADD ( CONSULTA_ID NUMBER(19) NULL  ) 
ADD ( FILTRO_TAREAS_ACTIVAS NUMBER(1) NULL  ) 
ADD ( NUM_ELEMENTOS_PAGINA NUMBER(3) NULL  ) ;

ALTER TABLE HEL_USUARI_PREFS ADD ( DEFAULT_TIPUS_EXPEDIENT NUMBER(19) NULL  ) ;

CREATE TABLE HEL_EXPEDIENT_NOTIF_ELECTR (
  ID 					NUMBER 			NOT NULL ,
  DATA 					TIMESTAMP(0) 	NOT NULL ,
  EXPEDIENT_ID 			NUMBER 			NOT NULL ,
  NUMERO 				VARCHAR2(255) 	NOT NULL ,
  RDS_CODI 				VARCHAR2(255) 	NOT NULL ,
  RDS_CLAVE 			VARCHAR2(255) 	NOT NULL 
);

CREATE INDEX HEL_EXPNOTELE_EXPEDIENT_ID_I ON HEL_EXPEDIENT_NOTIF_ELECTR 
(EXPEDIENT_ID);

ALTER TABLE HEL_EXPEDIENT_NOTIF_ELECTR ADD (
  CONSTRAINT HEL_EXPEDIENT_EXPNOTELE_FK 
 FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID));

ALTER TABLE HEL_REGISTRE
MODIFY ( VALOR_NOU VARCHAR2(4000 CHAR) ) 
MODIFY ( VALOR_VELL VARCHAR2(4000 CHAR) ) ;

ALTER TABLE HEL_PORTASIGNATURES ADD (
    DATA_SIGNAT_REBUTJAT TIMESTAMP(6),
    DATA_CUSTODIA_INTENT TIMESTAMP(6),
    DATA_CUSTODIA_OK TIMESTAMP(6),
    DATA_SIGNAL_INTENT TIMESTAMP(6),
    DATA_SIGNAL_OK TIMESTAMP(6));
    
ALTER TABLE JBPM_PROCESSINSTANCE ADD (EXPEDIENT_ID_ NUMBER(19) NULL);

-- PARES
UPDATE 	JBPM_PROCESSINSTANCE JPI 
   SET 	JPI.EXPEDIENT_ID_ = (
			SELECT ID FROM HEL_EXPEDIENT EXP WHERE EXP.PROCESS_INSTANCE_ID = JPI.ID_
		);

-- SUBPROCESSOS nivell 1
UPDATE  JBPM_PROCESSINSTANCE JPI 
   SET 	JPI.EXPEDIENT_ID_ = (
			SELECT 	PI.EXPEDIENT_ID_ 
			  FROM 	JBPM_PROCESSINSTANCE PI,
					JBPM_TOKEN TK
			 WHERE	PI.ID_ = TK.PROCESSINSTANCE_
			 AND	JPI.SUPERPROCESSTOKEN_ = TK.ID_
		)
 WHERE	JPI.EXPEDIENT_ID_ IS NULL
   AND 	JPI.SUPERPROCESSTOKEN_ IS NOT NULL;

-- SUBPROCESSOS nivell 2
UPDATE  JBPM_PROCESSINSTANCE JPI 
   SET 	JPI.EXPEDIENT_ID_ = (
			SELECT 	PI.EXPEDIENT_ID_ 
			  FROM 	JBPM_PROCESSINSTANCE PI,
					JBPM_TOKEN TK
			 WHERE	PI.ID_ = TK.PROCESSINSTANCE_
			 AND	JPI.SUPERPROCESSTOKEN_ = TK.ID_
		)
 WHERE	JPI.EXPEDIENT_ID_ IS NULL
   AND 	JPI.SUPERPROCESSTOKEN_ IS NOT NULL;
   
-- SUBPROCESSOS nivell 3
--UPDATE  JBPM_PROCESSINSTANCE JPI 
--   SET 	JPI.EXPEDIENT_ID_ = (
--			SELECT 	PI.EXPEDIENT_ID_ 
--			  FROM 	JBPM_PROCESSINSTANCE PI,
--					JBPM_TOKEN TK
--			 WHERE	PI.ID_ = TK.PROCESSINSTANCE_
--			 AND	JPI.SUPERPROCESSTOKEN_ = TK.ID_
--		)
-- WHERE	JPI.EXPEDIENT_ID_ IS NULL
--   AND 	JPI.SUPERPROCESSTOKEN_ IS NOT NULL;
-- 
-- Es pot repetir per tans de nivells de supbrocessos existeixin.

CREATE INDEX HEL_PROCINST_EXPEDIENT_ID_I ON JBPM_PROCESSINSTANCE(EXPEDIENT_ID_);

-- Per a permetre desar informaci贸 per a poder realitzar la retroacci贸 de l'expedient
ALTER TABLE HEL_EXPEDIENT_TIPUS ADD AMB_RETROACCIO NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE HEL_EXPEDIENT ADD AMB_RETROACCIO NUMBER(1) DEFAULT 1 NOT NULL;

-- Actualitzaci贸 a la nova versi贸 --
INSERT INTO HEL_VERSIO (
    ID,
    CODI,
    ORDRE,
    DATA_CREACIO,
    PROCES_EXECUTAT,
    SCRIPT_EXECUTAT,
    DATA_EXECUCIO_SCRIPT)
SELECT
    HIBERNATE_SEQUENCE.NEXTVAL ID,
    '3.0.0' CODI,
    300 ORDRE,
    SYSDATE DATA_CREACIO,
    0 PROCES_EXECUTAT,
    1 SCRIPT_EXECUTAT,
    SYSDATE DATA_EXECUCIO_SCRIPT
FROM DUAL
WHERE (SELECT COUNT(*) FROM HEL_VERSIO WHERE ORDRE = 300) = 0;

-- Index per a consulta d'operaicons massives pendents --
CREATE INDEX HEL_EXMASEXP_EXEMAS_I ON HEL_EXEC_MASEXP (EXECMAS_ID);