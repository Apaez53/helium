--
-- Create Schema Script 
--   Database Version   : 
--   Schema             : HELIUM 
--   Script Created by  : HELIUM 
--   Script Created at  :  
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Indexes: 107       Columns: 138        
--   Sequences: 1 
--   Tables: 75         Columns: 618        Constraints: 245    

CREATE TABLE HEL_ACCIO
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DESCRIPCIO           VARCHAR2(255 CHAR),
  JBPM_ACTION          VARCHAR2(255 CHAR)       NOT NULL,
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL
)
;


CREATE TABLE HEL_ACL_CLASS
(
  ID     BIGINT                             NOT NULL,
  CLASS  VARCHAR(255)                     NOT NULL
)
;


CREATE TABLE HEL_ACL_ENTRY
(
  ID                   BIGINT               NOT NULL,
  ACE_ORDER            BIGINT               NOT NULL,
  AUDIT_FAILURE        BOOLEAN                NOT NULL,
  AUDIT_SUCCESS        BOOLEAN                NOT NULL,
  GRANTING             BOOLEAN                NOT NULL,
  MASK                 BIGINT               NOT NULL,
  ACL_OBJECT_IDENTITY  BIGINT,
  SID                  BIGINT
)
;


CREATE TABLE HEL_ACL_OBJECT_IDENTITY
(
  ID                  BIGINT                NOT NULL,
  ENTRIES_INHERITING  BOOLEAN                 NOT NULL,
  OBJECT_ID_IDENTITY  BIGINT                NOT NULL,
  OBJECT_ID_CLASS     BIGINT,
  OWNER_SID           BIGINT,
  PARENT_OBJECT       BIGINT
)
;


CREATE TABLE HEL_ACL_SID
(
  ID         BIGINT                         NOT NULL,
  PRINCIPAL  BOOLEAN,
  SID        VARCHAR(100)                 NOT NULL
)
;


CREATE TABLE HEL_ACTION_LOG
(
  ID          BIGINT                        NOT NULL,
  ACCIO       VARCHAR(255)                NOT NULL,
  COLUMNA_PK  VARCHAR(255)                NOT NULL,
  DATA        TIMESTAMP(6)                      NOT NULL,
  TAULA       VARCHAR(255)                NOT NULL,
  USUARI      VARCHAR(255)                NOT NULL,
  VALORS      VARCHAR(255)                NOT NULL
)
;


CREATE TABLE HEL_AREA
(
  ID          BIGINT                        NOT NULL,
  CODI        VARCHAR(64)                 NOT NULL,
  DESCRIPCIO  VARCHAR(255),
  NOM         VARCHAR(255)                NOT NULL,
  ENTORN_ID   BIGINT                        NOT NULL,
  PARE_ID     BIGINT,
  TIPUS_ID    BIGINT                        NOT NULL
)
;


CREATE TABLE HEL_AREA_MEMBRE
(
  ID       BIGINT                           NOT NULL,
  CODI     VARCHAR(64)                    NOT NULL,
  AREA_ID  BIGINT                           NOT NULL
)
;


CREATE TABLE HEL_AREA_TIPUS
(
  ID          BIGINT                        NOT NULL,
  CODI        VARCHAR(64)                 NOT NULL,
  DESCRIPCIO  VARCHAR(255),
  NOM         VARCHAR(255)                NOT NULL,
  ENTORN_ID   BIGINT                        NOT NULL
)
;


CREATE TABLE HEL_CAMP
(
  ID                   BIGINT               NOT NULL,
  CODI                 VARCHAR(64)        NOT NULL,
  DOMINI_CAMP_TEXT     VARCHAR(64),
  DOMINI_CAMP_VALOR    VARCHAR(64),
  DOMINI_PARAMID       VARCHAR(255),
  DOMINI_PARAMS        VARCHAR(255),
  ETIQUETA             VARCHAR(255)       NOT NULL,
  MULTIPLE             BOOLEAN,
  OBSERVACIONS         VARCHAR(255),
  OCULT                BOOLEAN,
  TIPUS                BIGINT               NOT NULL,
  CAMP_AGRUPACIO_ID    BIGINT,
  DEFINICIO_PROCES_ID  BIGINT               NOT NULL,
  DOMINI_ID            BIGINT,
  ENUMERACIO_ID        BIGINT
)
;


CREATE TABLE HEL_CAMP_AGRUP
(
  ID                   BIGINT               NOT NULL,
  CODI                 VARCHAR(64)        NOT NULL,
  DESCRIPCIO           VARCHAR(255),
  NOM                  VARCHAR(255)       NOT NULL,
  ORDRE                BIGINT,
  DEFINICIO_PROCES_ID  BIGINT               NOT NULL
)
;


CREATE TABLE HEL_CAMP_REGISTRE
(
  ID           BIGINT                       NOT NULL,
  LLISTAR      BOOLEAN,
  OBLIGATORI   BOOLEAN,
  ORDRE        BIGINT,
  MEMBRE_ID    BIGINT                       NOT NULL,
  REGISTRE_ID  BIGINT                       NOT NULL
)
;


CREATE TABLE HEL_CAMP_TASCA
(
  ID        BIGINT                          NOT NULL,
  ORDRE     BIGINT,
  RF        BOOLEAN,
  RO        BOOLEAN,
  RQ        BOOLEAN,
  WT        BOOLEAN,
  CAMP_ID   BIGINT                          NOT NULL,
  TASCA_ID  BIGINT                          NOT NULL
)
;


CREATE TABLE HEL_CARREC
(
  ID               BIGINT                   NOT NULL,
  CODI             VARCHAR(64)            NOT NULL,
  DESCRIPCIO       VARCHAR(255),
  NOM_DONA         VARCHAR(255)           NOT NULL,
  NOM_HOME         VARCHAR(255)           NOT NULL,
  PERSONA_CODI     VARCHAR(64),
  PERSONA_SEXE     BIGINT,
  CARREC_DONA      VARCHAR(255)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR(255)           NOT NULL,
  AREA_ID          BIGINT                   NOT NULL,
  ENTORN_ID        BIGINT                   NOT NULL
)
;


CREATE TABLE HEL_CARREC_JBPMID
(
  ID               BIGINT                   NOT NULL,
  CODI             VARCHAR(64)            NOT NULL,
  DESCRIPCIO       VARCHAR(255),
  NOM_DONA         VARCHAR(255)           NOT NULL,
  NOM_HOME         VARCHAR(255)           NOT NULL,
  PERSONA_SEXE     BIGINT,
  CARREC_DONA      VARCHAR(255)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR(255)           NOT NULL
)
;


CREATE TABLE HEL_CONSULTA
(
  ID                  BIGINT                NOT NULL,
  CODI                VARCHAR(64)         NOT NULL,
  DESCRIPCIO          VARCHAR(255),
  GENERICA            BOOLEAN,
  NOM                 VARCHAR(255)        NOT NULL,
  ENTORN_ID           BIGINT                NOT NULL,
  EXPEDIENT_TIPUS_ID  BIGINT                NOT NULL
)
;


CREATE TABLE HEL_CONSULTA_CAMP
(
  ID               BIGINT                   NOT NULL,
  CAMP_CODI        VARCHAR(64)            NOT NULL,
  DEFPROC_JBPMKEY  VARCHAR(255),
  DEFPROC_VERSIO   BIGINT,
  ORDRE            BIGINT,
  TIPUS            BIGINT                   NOT NULL,
  CONSULTA_ID      BIGINT                   NOT NULL
)
;


CREATE TABLE HEL_DEFINICIO_PROCES
(
  ID                  BIGINT                NOT NULL,
  DATACREACIO         TIMESTAMP(6)              NOT NULL,
  ETIQUETA            VARCHAR(64),
  JBPM_ID             VARCHAR(255)        NOT NULL,
  JBPM_KEY            VARCHAR(255)        NOT NULL,
  VERSIO              BIGINT,
  ENTORN_ID           BIGINT                NOT NULL,
  EXPEDIENT_TIPUS_ID  BIGINT
)
;


CREATE TABLE HEL_DOCUMENT
(
  ID                     BIGINT             NOT NULL,
  ARXIU_CONTINGUT        BYTEA,
  ARXIU_NOM              VARCHAR(255),
  CODI                   VARCHAR(64)      NOT NULL,
  CONTENT_TYPE           VARCHAR(255),
  CUSTODIA_CODI          VARCHAR(255),
  DESCRIPCIO             VARCHAR(255),
  NOM                    VARCHAR(255)     NOT NULL,
  PLANTILLA              BOOLEAN,
  PORTASIGNATURES_ID     BIGINT,
  TIPUS_PORTASIGNATURES  BIGINT,
  CAMP_DATA_ID           BIGINT,
  DEFINICIO_PROCES_ID    BIGINT             NOT NULL
)
--LOB (ARXIU_CONTINGUT) STORE AS HEL_DOCUMENT_CONT_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX HEL_DOCUMENT_CONT_LOB_I)
;


CREATE TABLE HEL_DOCUMENT_STORE
(
  ID                   BIGINT               NOT NULL,
  ADJUNT               BOOLEAN,
  ADJUNT_TITOL         VARCHAR(255),
  ARXIU_CONTINGUT      BYTEA,
  ARXIU_NOM            VARCHAR(255)       NOT NULL,
  DATA_CREACIO         TIMESTAMP(6)             NOT NULL,
  DATA_DOCUMENT        DATE                     NOT NULL,
  DATA_MODIFICACIO     TIMESTAMP(6)             NOT NULL,
  FONT                 BIGINT               NOT NULL,
  JBPM_VARIABLE        VARCHAR(255)       NOT NULL,
  PROCESS_INSTANCE_ID  VARCHAR(64)        NOT NULL,
  REF_CUSTODIA         VARCHAR(255),
  REF_FONT             VARCHAR(255),
  SIGNAT               BOOLEAN
)
--LOB (ARXIU_CONTINGUT) STORE AS HEL_DOCSTORE_CONT_LOB (
--   TABLESPACE HELIUM_LOB
--    INDEX HEL_DOCSTORE_CONT_LOB_I)
;


CREATE TABLE HEL_DOCUMENT_TASCA
(
  ID           BIGINT                       NOT NULL,
  ORDRE        BIGINT,
  RO           BOOLEAN,
  RQ           BOOLEAN,
  DOCUMENT_ID  BIGINT                       NOT NULL,
  TASCA_ID     BIGINT                       NOT NULL
)
;


CREATE TABLE HEL_DOMINI
(
  ID                  BIGINT                NOT NULL,
  CACHE_SEGONS        BIGINT,
  CODI                VARCHAR(64)         NOT NULL,
  DESCRIPCIO          VARCHAR(255),
  JNDI_DATASOURCE     VARCHAR(255),
  NOM                 VARCHAR(255)        NOT NULL,
  ORDRE_PARAMS        VARCHAR(255),
  SQLEXPR             VARCHAR(1024),
  TIPUS               BIGINT                NOT NULL,
  URL                 VARCHAR(255),
  ENTORN_ID           BIGINT                NOT NULL,
  EXPEDIENT_TIPUS_ID  BIGINT
)
;


CREATE TABLE HEL_ENTORN
(
  ID          BIGINT                        NOT NULL,
  ACTIU       BOOLEAN,
  CODI        VARCHAR(64)                 NOT NULL,
  DESCRIPCIO  VARCHAR(255),
  NOM         VARCHAR(255)                NOT NULL
)
;


CREATE TABLE HEL_ENUMERACIO
(
  ID         BIGINT                         NOT NULL,
  CODI       VARCHAR(64)                  NOT NULL,
  NOM        VARCHAR(255)                 NOT NULL,
  VALORS     VARCHAR(1024),
  ENTORN_ID  BIGINT                         NOT NULL
)
;


CREATE TABLE HEL_ESTAT
(
  ID                  BIGINT                NOT NULL,
  CODI                VARCHAR(64)         NOT NULL,
  NOM                 VARCHAR(255)        NOT NULL,
  ORDRE               BIGINT                NOT NULL,
  EXPEDIENT_TIPUS_ID  BIGINT                NOT NULL
)
;


CREATE TABLE HEL_EXPEDIENT
(
  ID                   BIGINT               NOT NULL,
  COMENTARI            VARCHAR(255),
  DATA_FI              TIMESTAMP(6),
  DATA_INICI           TIMESTAMP(6)             NOT NULL,
  INFO_ATURAT          VARCHAR(1024),
  INICIADOR_CODI       VARCHAR(64),
  INICIADOR_TIPUS      BIGINT,
  NUMERO               VARCHAR(64),
  NUMERO_DEFAULT       VARCHAR(64),
  PROCESS_INSTANCE_ID  VARCHAR(255)       NOT NULL,
  RESPONSABLE_CODI     VARCHAR(64),
  TITOL                VARCHAR(255),
  ENTORN_ID            BIGINT               NOT NULL,
  ESTAT_ID             BIGINT,
  TIPUS_ID             BIGINT               NOT NULL
)
;


CREATE TABLE HEL_EXPEDIENT_RELS
(
  ORIGEN_ID  BIGINT                         NOT NULL,
  DESTI_ID   BIGINT                         NOT NULL
)
;


CREATE TABLE HEL_EXPEDIENT_TIPUS
(
  ID                BIGINT                  NOT NULL,
  ANY_ACTUAL        BIGINT,
  CODI              VARCHAR(64)           NOT NULL,
  DEMANA_NUMERO     BOOLEAN,
  DEMANA_TITOL      BOOLEAN,
  EXPRESSIO_NUMERO  VARCHAR(255),
  JBPM_PD_KEY       VARCHAR(255),
  NOM               VARCHAR(255)          NOT NULL,
  REINICIAR_ANUAL   BOOLEAN,
  RESPDEFAULT_CODI  VARCHAR(64),
  SEQUENCIA         BIGINT,
  SEQUENCIA_DEF     BIGINT,
  SISTRA_CODTRA     VARCHAR(64),
  SISTRA_MAPCAMPS   VARCHAR(1024),
  SISTRA_MAPDOCS    VARCHAR(1024),
  TE_NUMERO         BOOLEAN,
  TE_TITOL          BOOLEAN,
  ENTORN_ID         BIGINT                  NOT NULL
)
;


CREATE TABLE HEL_FESTIU
(
  ID    BIGINT                              NOT NULL,
  DATA  DATE                                    NOT NULL
)
;


CREATE TABLE HEL_FIRMA_TASCA
(
  ID           BIGINT                       NOT NULL,
  ORDRE        BIGINT,
  RQ           BOOLEAN,
  DOCUMENT_ID  BIGINT                       NOT NULL,
  TASCA_ID     BIGINT                       NOT NULL
)
;


CREATE TABLE HEL_FORMEXT
(
  ID               BIGINT                   NOT NULL,
  DATA_DARRPET     TIMESTAMP(6),
  DATA_INICI       TIMESTAMP(6)                 NOT NULL,
  DATA_RECDADES    TIMESTAMP(6),
  DATA_FORMHEIGHT  BIGINT,
  DATA_FORMWIDTH   BIGINT,
  FORMID           VARCHAR(255)           NOT NULL,
  TASKID           VARCHAR(255)           NOT NULL,
  URL              VARCHAR(1024)          NOT NULL
)
;


CREATE TABLE HEL_IDGEN
(
  TAULA  VARCHAR(255),
  VALOR  BIGINT
)
;


CREATE TABLE HEL_INDEX
(
  NAME_     VARCHAR(50)                   NOT NULL,
  VALUE_    BYTEA,
  SIZE_     BIGINT,
  LF_       TIMESTAMP(6),
  DELETED_  BOOLEAN
)
--LOB (VALUE_) STORE AS HEL_INDEX_CONT_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX HEL_INDEX_CONT_LOB_I)
;


CREATE TABLE HEL_PERMIS
(
  CODI        VARCHAR(64)                 NOT NULL,
  DESCRIPCIO  VARCHAR(255)
)
;


CREATE TABLE HEL_PERSONA
(
  ID              BIGINT                    NOT NULL,
  AVIS_CORREU     BOOLEAN                     NOT NULL,
  CODI            VARCHAR(64)             NOT NULL,
  DATA_NAIXEMENT  DATE,
  DNI             VARCHAR(64),
  EMAIL           VARCHAR(255),
  FONT            BIGINT,
  LLINATGE1       VARCHAR(255)            NOT NULL,
  LLINATGE2       VARCHAR(255),
  LLINATGES       VARCHAR(255),
  NOM             VARCHAR(255)            NOT NULL,
  NOM_SENCER      VARCHAR(255),
  SEXE            BIGINT                    NOT NULL,
  RELLEU_ID       BIGINT
)
;


CREATE TABLE HEL_PORTASIGNATURES
(
  ID                 BIGINT                 NOT NULL,
  DATA_ENVIAT        TIMESTAMP(6),
  DOCUMENT_ID        BIGINT                 NOT NULL,
  DOCUMENT_STORE_ID  BIGINT,
  ESTAT              BIGINT,
  MOTIU_REBUIG       VARCHAR(255),
  TOKEN_ID           BIGINT                 NOT NULL,
  TRANSICIO_KO       VARCHAR(255),
  TRANSICIO_OK       VARCHAR(255),
  TRANSICIO          BIGINT
)
;


CREATE TABLE HEL_REGISTRE
(
  ID                   BIGINT               NOT NULL,
  ACCIO                BIGINT               NOT NULL,
  DATA                 TIMESTAMP(6)             NOT NULL,
  ENTITAT              BIGINT               NOT NULL,
  ENTITAT_ID           VARCHAR(255)       NOT NULL,
  EXPEDIENT_ID         BIGINT               NOT NULL,
  MISSATGE             VARCHAR(1024),
  PROCESS_INSTANCE_ID  VARCHAR(255),
  RESPONSABLE_CODI     VARCHAR(64)        NOT NULL,
  VALOR_NOU            VARCHAR(1024),
  VALOR_VELL           VARCHAR(1024)
)
;


CREATE TABLE HEL_TASCA
(
  ID                   BIGINT               NOT NULL,
  EXPRESSIO_DELEGACIO  VARCHAR(255),
  FORM_EXTERN          VARCHAR(255),
  JBPM_NAME            VARCHAR(255)       NOT NULL,
  MISSATGE_INFO        VARCHAR(255),
  MISSATGE_WARN        VARCHAR(255),
  NOM                  VARCHAR(255),
  NOM_SCRIPT           VARCHAR(1024),
  RECURS_FORM          VARCHAR(255),
  TIPUS                BIGINT               NOT NULL,
  DEFINICIO_PROCES_ID  BIGINT               NOT NULL
)
;


CREATE TABLE HEL_TERMINI
(
  ID                   BIGINT               NOT NULL,
  ANYS                 BIGINT,
  CODI                 VARCHAR(64)        NOT NULL,
  DESCRIPCIO           VARCHAR(255),
  DIES                 BIGINT,
  LABORABLE            BOOLEAN,
  MANUAL               BOOLEAN,
  MESOS                BIGINT,
  NOM                  VARCHAR(255)       NOT NULL,
  DEFINICIO_PROCES_ID  BIGINT               NOT NULL
)
;


CREATE TABLE HEL_TERMINI_INICIAT
(
  ID                   BIGINT               NOT NULL,
  DATA_ATURADA         DATE,
  DATA_CANCEL          DATE,
  DATA_FI              DATE                     NOT NULL,
  DATA_INICI           DATE                     NOT NULL,
  DIES_ATURAT          BIGINT,
  JBPM_VARIABLE        VARCHAR(255),
  PROCESS_INSTANCE_ID  VARCHAR(255)       NOT NULL,
  TIMER_NAME           VARCHAR(255),
  TERMINI_ID           BIGINT
)
;


CREATE TABLE HEL_USUARI
(
  CODI         VARCHAR(64)                NOT NULL,
  ACTIU        BOOLEAN                        NOT NULL,
  CONTRASENYA  VARCHAR(255)
)
;


CREATE TABLE HEL_USUARI_PERMIS
(
  CODI    VARCHAR(64)                     NOT NULL,
  PERMIS  VARCHAR(64)                     NOT NULL
)
;


CREATE TABLE HEL_USUARI_PREFS
(
  CODI            VARCHAR(64)             NOT NULL,
  DEFAULT_ENTORN  VARCHAR(64)
)
;


CREATE TABLE HEL_VALIDACIO
(
  ID         BIGINT                         NOT NULL,
  EXPRESSIO  VARCHAR(1024)                NOT NULL,
  MISSATGE   VARCHAR(255)                 NOT NULL,
  NOM        VARCHAR(255),
  ORDRE      BIGINT                         NOT NULL,
  CAMP_ID    BIGINT,
  TASCA_ID   BIGINT
)
;


CREATE TABLE HEL_VERSIO
(
  ID          BIGINT                        NOT NULL,
  CODI        VARCHAR(64)                 NOT NULL,
  DESCRIPCIO  VARCHAR(255),
  ORDRE       BIGINT                        NOT NULL
)
;


CREATE SEQUENCE HIBERNATE_SEQUENCE
  START WITH 1
  MAXVALUE 999999999999999999
  MINVALUE 1
  CACHE 20;


CREATE TABLE JBPM_ACTION
(
  ID_                     BIGINT            NOT NULL,
  CLASS                   CHAR(1)          NOT NULL,
  NAME_                   VARCHAR(255),
  ISPROPAGATIONALLOWED_   BOOLEAN,
  ACTIONEXPRESSION_       VARCHAR(255),
  ISASYNC_                BOOLEAN,
  REFERENCEDACTION_       BIGINT,
  ACTIONDELEGATION_       BIGINT,
  EVENT_                  BIGINT,
  PROCESSDEFINITION_      BIGINT,
  EXPRESSION_             TEXT,
  TIMERNAME_              VARCHAR(255),
  DUEDATE_                VARCHAR(255),
  REPEAT_                 VARCHAR(255),
  TRANSITIONNAME_         VARCHAR(255),
  TIMERACTION_            BIGINT,
  EVENTINDEX_             BIGINT,
  EXCEPTIONHANDLER_       BIGINT,
  EXCEPTIONHANDLERINDEX_  BIGINT
)
--LOB (EXPRESSION_) STORE AS JBPM_ACTION_EXPR_LOB (
--    TABLESPACE HELIUM_LOB
--   INDEX JBPM_ACTION_EXPR_LOB_I)
;


CREATE TABLE JBPM_BYTEARRAY
(
  ID_              BIGINT                   NOT NULL,
  NAME_            VARCHAR(255),
  FILEDEFINITION_  BIGINT
)
;


CREATE TABLE JBPM_BYTEBLOCK
(
  PROCESSFILE_  BIGINT                      NOT NULL,
  BYTES_        BYTEA,
  INDEX_        BIGINT                      NOT NULL
)
;


CREATE TABLE JBPM_COMMENT
(
  ID_                 BIGINT                NOT NULL,
  VERSION_            BIGINT                NOT NULL,
  ACTORID_            VARCHAR(255),
  TIME_               TIMESTAMP(6),
  MESSAGE_            TEXT,
  TOKEN_              BIGINT,
  TASKINSTANCE_       BIGINT,
  TOKENINDEX_         BIGINT,
  TASKINSTANCEINDEX_  BIGINT
)
--LOB (MESSAGE_) STORE AS JBPM_COMMENT_MESSG_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_COMMENT_MESSG_LOB_I)
;


CREATE TABLE JBPM_DECISIONCONDITIONS
(
  DECISION_        BIGINT                   NOT NULL,
  TRANSITIONNAME_  VARCHAR(255),
  EXPRESSION_      VARCHAR(255),
  INDEX_           BIGINT                   NOT NULL
)
;


CREATE TABLE JBPM_DELEGATION
(
  ID_                 BIGINT                NOT NULL,
  CLASSNAME_          TEXT,
  CONFIGURATION_      TEXT,
  CONFIGTYPE_         VARCHAR(255),
  PROCESSDEFINITION_  BIGINT
)
--LOB (CLASSNAME_) STORE AS JBPM_DELEGATION_CLASSN_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_DELEGATION_CLASSN_LOB_I)
--LOB (CONFIGURATION_) STORE AS JBPM_DELEGATION_CONF_LOB (
--    TABLESPACE HELIUM_LOB
--   INDEX JBPM_DELEGATION_CONF_LOB_I)
;


CREATE TABLE JBPM_EVENT
(
  ID_                 BIGINT                NOT NULL,
  EVENTTYPE_          VARCHAR(255),
  TYPE_               CHAR(1),
  GRAPHELEMENT_       BIGINT,
  PROCESSDEFINITION_  BIGINT,
  NODE_               BIGINT,
  TRANSITION_         BIGINT,
  TASK_               BIGINT
)
;


CREATE TABLE JBPM_EXCEPTIONHANDLER
(
  ID_                  BIGINT               NOT NULL,
  EXCEPTIONCLASSNAME_  TEXT,
  TYPE_                CHAR(1),
  GRAPHELEMENT_        BIGINT,
  PROCESSDEFINITION_   BIGINT,
  GRAPHELEMENTINDEX_   BIGINT,
  NODE_                BIGINT,
  TRANSITION_          BIGINT,
  TASK_                BIGINT
)
--LOB (EXCEPTIONCLASSNAME_) STORE AS JBPM_EXCHANDL_EXCLASSN_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_EXCHANDL_EXCLASSN_LOB_I)
;


CREATE TABLE JBPM_ID_GROUP
(
  ID_      BIGINT                           NOT NULL,
  CLASS_   CHAR(1)                         NOT NULL,
  NAME_    VARCHAR(255),
  TYPE_    VARCHAR(255),
  PARENT_  BIGINT
)
;


CREATE TABLE JBPM_ID_MEMBERSHIP
(
  ID_     BIGINT                            NOT NULL,
  CLASS_  CHAR(1)                          NOT NULL,
  NAME_   VARCHAR(255),
  ROLE_   VARCHAR(255),
  USER_   BIGINT,
  GROUP_  BIGINT
)
;


CREATE TABLE JBPM_ID_PERMISSIONS
(
  ENTITY_  BIGINT                           NOT NULL,
  CLASS_   VARCHAR(255),
  NAME_    VARCHAR(255),
  ACTION_  VARCHAR(255)
)
;


CREATE TABLE JBPM_ID_USER
(
  ID_        BIGINT                         NOT NULL,
  CLASS_     CHAR(1)                       NOT NULL,
  NAME_      VARCHAR(255),
  EMAIL_     VARCHAR(255),
  PASSWORD_  VARCHAR(255)
)
;


CREATE TABLE JBPM_JOB
(
  ID_                BIGINT                 NOT NULL,
  CLASS_             CHAR(1)               NOT NULL,
  VERSION_           BIGINT                 NOT NULL,
  DUEDATE_           TIMESTAMP(6),
  PROCESSINSTANCE_   BIGINT,
  TOKEN_             BIGINT,
  TASKINSTANCE_      BIGINT,
  ISSUSPENDED_       BOOLEAN,
  ISEXCLUSIVE_       BOOLEAN,
  LOCKOWNER_         VARCHAR(255),
  LOCKTIME_          TIMESTAMP(6),
  EXCEPTION_         TEXT,
  RETRIES_           BIGINT,
  NAME_              VARCHAR(255),
  REPEAT_            VARCHAR(255),
  TRANSITIONNAME_    VARCHAR(255),
  ACTION_            BIGINT,
  GRAPHELEMENTTYPE_  VARCHAR(255),
  GRAPHELEMENT_      BIGINT,
  NODE_              BIGINT
)
--LOB (EXCEPTION_) STORE AS JBPM_JOB_EXCEP_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_JOB_EXCEP_LOB_I)
;


CREATE TABLE JBPM_LOG
(
  ID_                BIGINT                 NOT NULL,
  CLASS_             CHAR(1)               NOT NULL,
  INDEX_             BIGINT,
  DATE_              TIMESTAMP(6),
  TOKEN_             BIGINT,
  PARENT_            BIGINT,
  MESSAGE_           TEXT,
  EXCEPTION_         TEXT,
  ACTION_            BIGINT,
  NODE_              BIGINT,
  ENTER_             TIMESTAMP(6),
  LEAVE_             TIMESTAMP(6),
  DURATION_          BIGINT,
  NEWLONGVALUE_      BIGINT,
  TRANSITION_        BIGINT,
  CHILD_             BIGINT,
  SOURCENODE_        BIGINT,
  DESTINATIONNODE_   BIGINT,
  VARIABLEINSTANCE_  BIGINT,
  OLDBYTEARRAY_      BIGINT,
  NEWBYTEARRAY_      BIGINT,
  OLDDATEVALUE_      TIMESTAMP(6),
  NEWDATEVALUE_      TIMESTAMP(6),
  OLDDOUBLEVALUE_    FLOAT(53),
  NEWDOUBLEVALUE_    FLOAT(53),
  OLDLONGIDCLASS_    VARCHAR(255),
  OLDLONGIDVALUE_    BIGINT,
  NEWLONGIDCLASS_    VARCHAR(255),
  NEWLONGIDVALUE_    BIGINT,
  OLDSTRINGIDCLASS_  VARCHAR(255),
  OLDSTRINGIDVALUE_  VARCHAR(255),
  NEWSTRINGIDCLASS_  VARCHAR(255),
  NEWSTRINGIDVALUE_  VARCHAR(255),
  OLDLONGVALUE_      BIGINT,
  OLDSTRINGVALUE_    TEXT,
  NEWSTRINGVALUE_    TEXT,
  TASKINSTANCE_      BIGINT,
  TASKACTORID_       VARCHAR(255),
  TASKOLDACTORID_    VARCHAR(255),
  SWIMLANEINSTANCE_  BIGINT
)
--LOB (MESSAGE_) STORE AS JBPM_LOG_MESSAGE_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_LOG_MESSAGE_LOB_I)
--LOB (EXCEPTION_) STORE AS JBPM_LOG_EXCEP_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_LOG_EXCEP_LOB_I)
--LOB (OLDSTRINGVALUE_) STORE AS JBPM_LOG_OLDSTRVAL_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_LOG_OLDSTRVAL_LOB_I)
--LOB (NEWSTRINGVALUE_) STORE AS JBPM_LOG_NEWSTRVAL_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_LOG_NEWSTRVAL_LOB_I)
;


CREATE TABLE JBPM_MODULEDEFINITION
(
  ID_                 BIGINT                NOT NULL,
  CLASS_              CHAR(1)              NOT NULL,
  NAME_               VARCHAR(255),
  PROCESSDEFINITION_  BIGINT,
  STARTTASK_          BIGINT
)
;


CREATE TABLE JBPM_MODULEINSTANCE
(
  ID_                  BIGINT               NOT NULL,
  CLASS_               CHAR(1)             NOT NULL,
  VERSION_             BIGINT               NOT NULL,
  PROCESSINSTANCE_     BIGINT,
  TASKMGMTDEFINITION_  BIGINT,
  NAME_                VARCHAR(255)
)
;


CREATE TABLE JBPM_NODE
(
  ID_                    BIGINT             NOT NULL,
  CLASS_                 CHAR(1)           NOT NULL,
  NAME_                  VARCHAR(255),
  DESCRIPTION_           TEXT,
  PROCESSDEFINITION_     BIGINT,
  ISASYNC_               BOOLEAN,
  ISASYNCEXCL_           BOOLEAN,
  ACTION_                BIGINT,
  SUPERSTATE_            BIGINT,
  SUBPROCNAME_           VARCHAR(255),
  SUBPROCESSDEFINITION_  BIGINT,
  DECISIONEXPRESSION_    VARCHAR(255),
  DECISIONDELEGATION     BIGINT,
  SCRIPT_                BIGINT,
  PARENTLOCKMODE_        VARCHAR(255),
  SIGNAL_                BIGINT,
  CREATETASKS_           BOOLEAN,
  ENDTASKS_              BOOLEAN,
  NODECOLLECTIONINDEX_   BIGINT
)
--LOB (DESCRIPTION_) STORE AS JBPM_NODE_DESC_LOB (
--    TABLESPACE HELIUM_LOB
--   INDEX JBPM_NODE_DESC_LOB_I)
;


CREATE TABLE JBPM_POOLEDACTOR
(
  ID_                BIGINT                 NOT NULL,
  VERSION_           BIGINT                 NOT NULL,
  ACTORID_           VARCHAR(255),
  SWIMLANEINSTANCE_  BIGINT
)
;


CREATE TABLE JBPM_PROCESSDEFINITION
(
  ID_                     BIGINT            NOT NULL,
  CLASS_                  CHAR(1)          NOT NULL,
  NAME_                   VARCHAR(255),
  DESCRIPTION_            TEXT,
  VERSION_                BIGINT,
  ISTERMINATIONIMPLICIT_  BOOLEAN,
  STARTSTATE_             BIGINT
)
--LOB (DESCRIPTION_) STORE AS JBPM_PROCDEF_DESC_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_PROCDEF_DESC_LOB_I)
;


CREATE TABLE JBPM_PROCESSINSTANCE
(
  ID_                 BIGINT                NOT NULL,
  VERSION_            BIGINT                NOT NULL,
  KEY_                VARCHAR(255),
  START_              TIMESTAMP(6),
  END_                TIMESTAMP(6),
  ISSUSPENDED_        BOOLEAN,
  PROCESSDEFINITION_  BIGINT,
  ROOTTOKEN_          BIGINT,
  SUPERPROCESSTOKEN_  BIGINT
)
;


CREATE TABLE JBPM_RUNTIMEACTION
(
  ID_                    BIGINT             NOT NULL,
  VERSION_               BIGINT             NOT NULL,
  EVENTTYPE_             VARCHAR(255),
  TYPE_                  CHAR(1),
  GRAPHELEMENT_          BIGINT,
  PROCESSINSTANCE_       BIGINT,
  ACTION_                BIGINT,
  PROCESSINSTANCEINDEX_  BIGINT
)
;


CREATE TABLE JBPM_SWIMLANE
(
  ID_                      BIGINT           NOT NULL,
  NAME_                    VARCHAR(255),
  ACTORIDEXPRESSION_       VARCHAR(255),
  POOLEDACTORSEXPRESSION_  VARCHAR(255),
  ASSIGNMENTDELEGATION_    BIGINT,
  TASKMGMTDEFINITION_      BIGINT
)
;


CREATE TABLE JBPM_SWIMLANEINSTANCE
(
  ID_                BIGINT                 NOT NULL,
  VERSION_           BIGINT                 NOT NULL,
  NAME_              VARCHAR(255),
  ACTORID_           VARCHAR(255),
  SWIMLANE_          BIGINT,
  TASKMGMTINSTANCE_  BIGINT
)
;


CREATE TABLE JBPM_TASK
(
  ID_                      BIGINT           NOT NULL,
  NAME_                    VARCHAR(255),
  DESCRIPTION_             TEXT,
  PROCESSDEFINITION_       BIGINT,
  ISBLOCKING_              BOOLEAN,
  ISSIGNALLING_            BOOLEAN,
  CONDITION_               VARCHAR(255),
  DUEDATE_                 VARCHAR(255),
  PRIORITY_                BIGINT,
  ACTORIDEXPRESSION_       VARCHAR(255),
  POOLEDACTORSEXPRESSION_  VARCHAR(255),
  TASKMGMTDEFINITION_      BIGINT,
  TASKNODE_                BIGINT,
  STARTSTATE_              BIGINT,
  ASSIGNMENTDELEGATION_    BIGINT,
  SWIMLANE_                BIGINT,
  TASKCONTROLLER_          BIGINT
)
--LOB (DESCRIPTION_) STORE AS JBPM_TASK_DESC_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_TASK_DESC_LOB_I)
;


CREATE TABLE JBPM_TASKACTORPOOL
(
  TASKINSTANCE_  BIGINT                     NOT NULL,
  POOLEDACTOR_   BIGINT                     NOT NULL
)
;


CREATE TABLE JBPM_TASKCONTROLLER
(
  ID_                        BIGINT         NOT NULL,
  TASKCONTROLLERDELEGATION_  BIGINT
)
;


CREATE TABLE JBPM_TASKINSTANCE
(
  ID_                BIGINT                 NOT NULL,
  CLASS_             CHAR(1)               NOT NULL,
  VERSION_           BIGINT                 NOT NULL,
  NAME_              VARCHAR(255),
  DESCRIPTION_       TEXT,
  ACTORID_           VARCHAR(255),
  CREATE_            TIMESTAMP(6),
  START_             TIMESTAMP(6),
  END_               TIMESTAMP(6),
  DUEDATE_           TIMESTAMP(6),
  PRIORITY_          BIGINT,
  ISCANCELLED_       BOOLEAN,
  ISSUSPENDED_       BOOLEAN,
  ISOPEN_            BOOLEAN,
  ISSIGNALLING_      BOOLEAN,
  ISBLOCKING_        BOOLEAN,
  TASK_              BIGINT,
  TOKEN_             BIGINT,
  PROCINST_          BIGINT,
  SWIMLANINSTANCE_   BIGINT,
  TASKMGMTINSTANCE_  BIGINT
)
--LOB (DESCRIPTION_) STORE AS JBPM_TASKINSTANCE_DESC_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_TASKINSTANCE_DESC_LOB_I)
;


CREATE TABLE JBPM_TOKEN
(
  ID_                        BIGINT         NOT NULL,
  VERSION_                   BIGINT         NOT NULL,
  NAME_                      VARCHAR(255),
  START_                     TIMESTAMP(6),
  END_                       TIMESTAMP(6),
  NODEENTER_                 TIMESTAMP(6),
  NEXTLOGINDEX_              BIGINT,
  ISABLETOREACTIVATEPARENT_  BOOLEAN,
  ISTERMINATIONIMPLICIT_     BOOLEAN,
  ISSUSPENDED_               BOOLEAN,
  LOCK_                      VARCHAR(255),
  NODE_                      BIGINT,
  PROCESSINSTANCE_           BIGINT,
  PARENT_                    BIGINT,
  SUBPROCESSINSTANCE_        BIGINT
)
;


CREATE TABLE JBPM_TOKENVARIABLEMAP
(
  ID_               BIGINT                  NOT NULL,
  VERSION_          BIGINT                  NOT NULL,
  TOKEN_            BIGINT,
  CONTEXTINSTANCE_  BIGINT
)
;


CREATE TABLE JBPM_TRANSITION
(
  ID_                 BIGINT                NOT NULL,
  NAME_               VARCHAR(255),
  DESCRIPTION_        TEXT,
  PROCESSDEFINITION_  BIGINT,
  FROM_               BIGINT,
  TO_                 BIGINT,
  CONDITION_          VARCHAR(255),
  FROMINDEX_          BIGINT
)
--LOB (DESCRIPTION_) STORE AS JBPM_TRANSITION_DESC_LOB (
--    TABLESPACE HELIUM_LOB
--    INDEX JBPM_TRANSITION_DESC_LOB_I)
;


CREATE TABLE JBPM_VARIABLEACCESS
(
  ID_              BIGINT                   NOT NULL,
  VARIABLENAME_    VARCHAR(255),
  ACCESS_          VARCHAR(255),
  MAPPEDNAME_      VARCHAR(255),
  SCRIPT_          BIGINT,
  PROCESSSTATE_    BIGINT,
  TASKCONTROLLER_  BIGINT,
  INDEX_           BIGINT
)
;


CREATE TABLE JBPM_VARIABLEINSTANCE
(
  ID_                BIGINT                 NOT NULL,
  CLASS_             CHAR(1)               NOT NULL,
  VERSION_           BIGINT                 NOT NULL,
  NAME_              VARCHAR(255),
  CONVERTER_         CHAR(1),
  TOKEN_             BIGINT,
  TOKENVARIABLEMAP_  BIGINT,
  PROCESSINSTANCE_   BIGINT,
  BYTEARRAYVALUE_    BIGINT,
  DATEVALUE_         TIMESTAMP(6),
  DOUBLEVALUE_       FLOAT(53),
  LONGIDCLASS_       VARCHAR(255),
  LONGVALUE_         BIGINT,
  STRINGIDCLASS_     VARCHAR(255),
  STRINGVALUE_       VARCHAR(255),
  TASKINSTANCE_      BIGINT
)
;


ALTER TABLE HEL_ACL_CLASS ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_ACL_CLASS ADD  UNIQUE (CLASS);

ALTER TABLE HEL_ACL_ENTRY ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_ACL_SID ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_ACTION_LOG ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_AREA ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_AREA ADD UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_AREA_MEMBRE ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_AREA_MEMBRE ADD  UNIQUE (CODI, AREA_ID);

ALTER TABLE HEL_AREA_TIPUS ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_AREA_TIPUS ADD UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_CAMP ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_CAMP ADD  UNIQUE (CODI, DEFINICIO_PROCES_ID);

ALTER TABLE HEL_CAMP_AGRUP ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CAMP_AGRUP ADD 
  UNIQUE (CODI, DEFINICIO_PROCES_ID);

ALTER TABLE HEL_CAMP_REGISTRE ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CAMP_REGISTRE ADD   UNIQUE (REGISTRE_ID, ORDRE);
ALTER TABLE HEL_CAMP_REGISTRE ADD   UNIQUE (REGISTRE_ID, MEMBRE_ID);

ALTER TABLE HEL_CAMP_TASCA ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CAMP_TASCA ADD   UNIQUE (TASCA_ID, ORDRE);
ALTER TABLE HEL_CAMP_TASCA ADD   UNIQUE (CAMP_ID, TASCA_ID);

ALTER TABLE HEL_CARREC ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CARREC ADD UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_CARREC_JBPMID ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_CONSULTA ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CONSULTA ADD UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_CONSULTA_CAMP ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_CONSULTA_CAMP ADD 
  UNIQUE (CONSULTA_ID, CAMP_CODI, DEFPROC_JBPMKEY, DEFPROC_VERSIO, TIPUS);

ALTER TABLE HEL_DEFINICIO_PROCES ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_DEFINICIO_PROCES ADD 
  UNIQUE (JBPM_ID);

ALTER TABLE HEL_DOCUMENT ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_DOCUMENT ADD 
 UNIQUE (CODI, DEFINICIO_PROCES_ID);

ALTER TABLE HEL_DOCUMENT_STORE ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_DOCUMENT_TASCA ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_DOCUMENT_TASCA ADD  UNIQUE (TASCA_ID, ORDRE);
ALTER TABLE HEL_DOCUMENT_TASCA ADD   UNIQUE (DOCUMENT_ID, TASCA_ID);

ALTER TABLE HEL_DOMINI ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_DOMINI ADD 
  UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_ENTORN ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_ENTORN ADD 
  UNIQUE (CODI);

ALTER TABLE HEL_ENUMERACIO ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_ENUMERACIO ADD  UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_ESTAT ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_ESTAT ADD  UNIQUE (CODI, EXPEDIENT_TIPUS_ID);

ALTER TABLE HEL_EXPEDIENT ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_EXPEDIENT ADD   UNIQUE (PROCESS_INSTANCE_ID);

ALTER TABLE HEL_EXPEDIENT_RELS ADD 
  PRIMARY KEY
 (ORIGEN_ID, DESTI_ID);

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_EXPEDIENT_TIPUS ADD  UNIQUE (CODI);
ALTER TABLE HEL_EXPEDIENT_TIPUS ADD  UNIQUE (SISTRA_CODTRA);
ALTER TABLE HEL_EXPEDIENT_TIPUS ADD  UNIQUE (CODI, ENTORN_ID);

ALTER TABLE HEL_FESTIU ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_FESTIU ADD 
  UNIQUE (DATA);

ALTER TABLE HEL_FIRMA_TASCA ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_FIRMA_TASCA ADD UNIQUE (TASCA_ID, ORDRE);
 ALTER TABLE HEL_FIRMA_TASCA ADD UNIQUE (DOCUMENT_ID, TASCA_ID);

ALTER TABLE HEL_FORMEXT ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_FORMEXT ADD UNIQUE (FORMID);

ALTER TABLE HEL_INDEX ADD 
  PRIMARY KEY
 (NAME_);

ALTER TABLE HEL_PERMIS ADD 
  PRIMARY KEY
 (CODI);

ALTER TABLE HEL_PERSONA ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_PERSONA ADD UNIQUE (CODI);

ALTER TABLE HEL_PORTASIGNATURES ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_PORTASIGNATURES ADD 
  UNIQUE (DOCUMENT_ID, TOKEN_ID);

ALTER TABLE HEL_REGISTRE ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_TASCA ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_TASCA ADD 
  UNIQUE (JBPM_NAME, DEFINICIO_PROCES_ID);

ALTER TABLE HEL_TERMINI ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_TERMINI ADD 
 UNIQUE (CODI, DEFINICIO_PROCES_ID);

ALTER TABLE HEL_TERMINI_INICIAT ADD 
  PRIMARY KEY
 (ID);
ALTER TABLE HEL_TERMINI_INICIAT ADD  UNIQUE (TERMINI_ID, PROCESS_INSTANCE_ID);

ALTER TABLE HEL_USUARI ADD 
  PRIMARY KEY
 (CODI);

ALTER TABLE HEL_USUARI_PERMIS ADD 
  PRIMARY KEY
 (CODI, PERMIS);

ALTER TABLE HEL_USUARI_PREFS ADD 
  PRIMARY KEY
 (CODI);

ALTER TABLE HEL_VALIDACIO ADD 
  PRIMARY KEY
 (ID);

ALTER TABLE HEL_VERSIO ADD 
  PRIMARY KEY
 (ID);
 ALTER TABLE HEL_VERSIO ADD UNIQUE (CODI);
  ALTER TABLE HEL_VERSIO ADD UNIQUE (ORDRE);

ALTER TABLE JBPM_ACTION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_BYTEARRAY ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_BYTEBLOCK ADD 
  PRIMARY KEY
 (PROCESSFILE_, INDEX_);

ALTER TABLE JBPM_COMMENT ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_DECISIONCONDITIONS ADD 
  PRIMARY KEY
 (DECISION_, INDEX_);

ALTER TABLE JBPM_DELEGATION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_EVENT ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_EXCEPTIONHANDLER ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_ID_GROUP ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_ID_MEMBERSHIP ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_ID_USER ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_JOB ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_LOG ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_MODULEDEFINITION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_MODULEINSTANCE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_NODE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_POOLEDACTOR ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_PROCESSDEFINITION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_PROCESSINSTANCE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_RUNTIMEACTION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_SWIMLANE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TASK ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TASKACTORPOOL ADD 
  PRIMARY KEY
 (TASKINSTANCE_, POOLEDACTOR_);

ALTER TABLE JBPM_TASKCONTROLLER ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TASKINSTANCE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TOKEN ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_TRANSITION ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_VARIABLEACCESS ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE JBPM_VARIABLEINSTANCE ADD 
  PRIMARY KEY
 (ID_);

ALTER TABLE HEL_ACL_ENTRY ADD 
  CONSTRAINT HEL_ACLOBJID_ACLENTRY_FK 
 FOREIGN KEY (ACL_OBJECT_IDENTITY) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID);
ALTER TABLE HEL_ACL_ENTRY ADD CONSTRAINT HEL_ACLSID_ACLENTRY_FK 
 FOREIGN KEY (SID) 
 REFERENCES HEL_ACL_SID (ID);

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD 
  CONSTRAINT HEL_ACLSID_ACLOBJID_FK 
 FOREIGN KEY (OWNER_SID) 
 REFERENCES HEL_ACL_SID (ID);
ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD  CONSTRAINT HEL_ACLOBJID_ACLOBJID_FK 
 FOREIGN KEY (PARENT_OBJECT) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID);
ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD  CONSTRAINT HEL_ACLCLASS_ACLOBJID_FK 
 FOREIGN KEY (OBJECT_ID_CLASS) 
 REFERENCES HEL_ACL_CLASS (ID);

ALTER TABLE HEL_AREA ADD 
  CONSTRAINT HEL_ENTORN_AREA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_AREA ADD 
  CONSTRAINT HEL_AREA_AREA_FK 
 FOREIGN KEY (PARE_ID) 
 REFERENCES HEL_AREA (ID);
ALTER TABLE HEL_AREA ADD 
  CONSTRAINT HEL_AREATIPUS_AREA_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_AREA_TIPUS (ID);

ALTER TABLE HEL_AREA_MEMBRE ADD 
  CONSTRAINT HEL_AREA_AREAMEMBRE_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID);

ALTER TABLE HEL_AREA_TIPUS ADD 
  CONSTRAINT HEL_ENTORN_AREATIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);

ALTER TABLE HEL_CAMP ADD 
  CONSTRAINT HEL_DOMINI_CAMP_FK 
 FOREIGN KEY (DOMINI_ID) 
 REFERENCES HEL_DOMINI (ID);
ALTER TABLE HEL_CAMP ADD  CONSTRAINT HEL_DEFPROC_CAMP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID);
ALTER TABLE HEL_CAMP ADD   CONSTRAINT HEL_CAMPAGRUP_CAMP_FK 
 FOREIGN KEY (CAMP_AGRUPACIO_ID) 
 REFERENCES HEL_CAMP_AGRUP (ID);
ALTER TABLE HEL_CAMP ADD  CONSTRAINT HEL_ENUMERACIO_CAMP_FK 
 FOREIGN KEY (ENUMERACIO_ID) 
 REFERENCES HEL_ENUMERACIO (ID);

ALTER TABLE HEL_CAMP_AGRUP ADD 
  CONSTRAINT HEL_DEFPROC_CAMPAGRUP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID);

ALTER TABLE HEL_CAMP_REGISTRE ADD 
  CONSTRAINT HEL_CAMP_REGMEMBRE_FK 
 FOREIGN KEY (MEMBRE_ID) 
 REFERENCES HEL_CAMP (ID);
ALTER TABLE HEL_CAMP_REGISTRE ADD   CONSTRAINT HEL_CAMP_REGREGISTRE_FK 
 FOREIGN KEY (REGISTRE_ID) 
 REFERENCES HEL_CAMP (ID);

ALTER TABLE HEL_CAMP_TASCA ADD 
  CONSTRAINT HEL_TASCA_CAMPTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID);
ALTER TABLE HEL_CAMP_TASCA ADD  CONSTRAINT HEL_CAMP_CAMPTASCA_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID);

ALTER TABLE HEL_CARREC ADD 
  CONSTRAINT HEL_ENTORN_CARREC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_CARREC ADD  CONSTRAINT HEL_AREA_CARREC_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID);

ALTER TABLE HEL_CONSULTA ADD 
  CONSTRAINT HEL_ENTORN_CONSULTA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_CONSULTA ADD  CONSTRAINT HEL_EXPTIP_CONSULTA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID);

ALTER TABLE HEL_CONSULTA_CAMP ADD 
  CONSTRAINT HEL_CONSULTA_CONCAMP_FK 
 FOREIGN KEY (CONSULTA_ID) 
 REFERENCES HEL_CONSULTA (ID);

ALTER TABLE HEL_DEFINICIO_PROCES ADD 
  CONSTRAINT HEL_ENTORN_DEFPROC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_DEFINICIO_PROCES ADD 
  CONSTRAINT HEL_EXPTIP_DEFPROC_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID);

ALTER TABLE HEL_DOCUMENT ADD 
  CONSTRAINT HEL_DEFPROC_DOCUMENT_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID);
ALTER TABLE HEL_DOCUMENT ADD  CONSTRAINT HEL_CAMP_DOCUMENT_FK 
 FOREIGN KEY (CAMP_DATA_ID) 
 REFERENCES HEL_CAMP (ID);

ALTER TABLE HEL_DOCUMENT_TASCA ADD 
  CONSTRAINT HEL_TASCA_DOCTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID);
ALTER TABLE HEL_DOCUMENT_TASCA ADD  CONSTRAINT HEL_DOCUMENT_DOCTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID);

ALTER TABLE HEL_DOMINI ADD 
  CONSTRAINT HEL_ENTORN_DOMINI_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_DOMINI ADD  CONSTRAINT HEL_EXPTIP_DOMINI_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID);

ALTER TABLE HEL_ENUMERACIO ADD 
  CONSTRAINT HEL_ENTORN_ENUMERACIO_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);

ALTER TABLE HEL_ESTAT ADD 
  CONSTRAINT HEL_EXPTIPUS_ESTAT_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID);

ALTER TABLE HEL_EXPEDIENT ADD 
  CONSTRAINT HEL_ENTORN_EXPEDIENT_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);
ALTER TABLE HEL_EXPEDIENT ADD  CONSTRAINT HEL_ESTAT_EXPEDIENT_FK 
 FOREIGN KEY (ESTAT_ID) 
 REFERENCES HEL_ESTAT (ID);
ALTER TABLE HEL_EXPEDIENT ADD CONSTRAINT HEL_EXPTIPUS_EXPEDIENT_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID);

ALTER TABLE HEL_EXPEDIENT_RELS ADD 
  CONSTRAINT FKF505106BE39AF489 
 FOREIGN KEY (DESTI_ID) 
 REFERENCES HEL_EXPEDIENT (ID);
ALTER TABLE HEL_EXPEDIENT_RELS ADD  CONSTRAINT FKF505106B99E53506 
 FOREIGN KEY (ORIGEN_ID) 
 REFERENCES HEL_EXPEDIENT (ID);

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD 
  CONSTRAINT HEL_ENTORN_EXPTIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID);

ALTER TABLE HEL_FIRMA_TASCA ADD 
  CONSTRAINT HEL_TASCA_FIRTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID);
ALTER TABLE HEL_FIRMA_TASCA ADD   CONSTRAINT HEL_DOCUMENT_FIRTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID);

ALTER TABLE HEL_PERSONA ADD 
  CONSTRAINT HEL_RELLEU_PERSONA_FK 
 FOREIGN KEY (RELLEU_ID) 
 REFERENCES HEL_PERSONA (ID);

ALTER TABLE HEL_TASCA ADD 
  CONSTRAINT HEL_DEFPROC_TASCA_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID);

ALTER TABLE HEL_TERMINI ADD 
  CONSTRAINT HEL_DEFPROC_TERMINI_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID);

ALTER TABLE HEL_TERMINI_INICIAT ADD 
  CONSTRAINT HEL_TERMINI_TERMINIC_FK 
 FOREIGN KEY (TERMINI_ID) 
 REFERENCES HEL_TERMINI (ID);

ALTER TABLE HEL_USUARI_PERMIS ADD 
  CONSTRAINT HEL_PERMIS_USUARI_FK 
 FOREIGN KEY (CODI) 
 REFERENCES HEL_USUARI (CODI);
ALTER TABLE HEL_USUARI_PERMIS ADD CONSTRAINT HEL_USUARI_PERMIS_FK 
 FOREIGN KEY (PERMIS) 
 REFERENCES HEL_PERMIS (CODI);

ALTER TABLE HEL_VALIDACIO ADD 
  CONSTRAINT HEL_TASCA_VAIDACIO_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID);
ALTER TABLE HEL_VALIDACIO ADD  CONSTRAINT HEL_CAMP_VAIDACIO_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID);

ALTER TABLE JBPM_ACTION ADD 
  CONSTRAINT FK_ACTION_EVENT 
 FOREIGN KEY (EVENT_) 
 REFERENCES JBPM_EVENT (ID_);
ALTER TABLE JBPM_ACTION ADD   CONSTRAINT FK_ACTION_EXPTHDL 
 FOREIGN KEY (EXCEPTIONHANDLER_) 
 REFERENCES JBPM_EXCEPTIONHANDLER (ID_);
ALTER TABLE JBPM_ACTION ADD   CONSTRAINT FK_ACTION_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_ACTION ADD   CONSTRAINT FK_CRTETIMERACT_TA 
 FOREIGN KEY (TIMERACTION_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_ACTION ADD   CONSTRAINT FK_ACTION_ACTNDEL 
 FOREIGN KEY (ACTIONDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_ACTION ADD   CONSTRAINT FK_ACTION_REFACT 
 FOREIGN KEY (REFERENCEDACTION_) 
 REFERENCES JBPM_ACTION (ID_);

ALTER TABLE JBPM_BYTEARRAY ADD 
  CONSTRAINT FK_BYTEARR_FILDEF 
 FOREIGN KEY (FILEDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_);

ALTER TABLE JBPM_BYTEBLOCK ADD 
  CONSTRAINT FK_BYTEBLOCK_FILE 
 FOREIGN KEY (PROCESSFILE_) 
 REFERENCES JBPM_BYTEARRAY (ID_);

ALTER TABLE JBPM_COMMENT ADD 
  CONSTRAINT FK_COMMENT_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_COMMENT ADD   CONSTRAINT FK_COMMENT_TSK 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_);

ALTER TABLE JBPM_DECISIONCONDITIONS ADD 
  CONSTRAINT FK_DECCOND_DEC 
 FOREIGN KEY (DECISION_) 
 REFERENCES JBPM_NODE (ID_);

ALTER TABLE JBPM_DELEGATION ADD 
  CONSTRAINT FK_DELEGATION_PRCD 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);

ALTER TABLE JBPM_EVENT ADD 
  CONSTRAINT FK_EVENT_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
 ALTER TABLE JBPM_EVENT ADD  CONSTRAINT FK_EVENT_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_EVENT ADD   CONSTRAINT FK_EVENT_TRANS 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_);
ALTER TABLE JBPM_EVENT ADD   CONSTRAINT FK_EVENT_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_);

ALTER TABLE JBPM_ID_GROUP ADD 
  CONSTRAINT FK_ID_GRP_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_ID_GROUP (ID_);

ALTER TABLE JBPM_ID_MEMBERSHIP ADD 
  CONSTRAINT FK_ID_MEMSHIP_GRP 
 FOREIGN KEY (GROUP_) 
 REFERENCES JBPM_ID_GROUP (ID_);
ALTER TABLE JBPM_ID_MEMBERSHIP ADD CONSTRAINT FK_ID_MEMSHIP_USR 
 FOREIGN KEY (USER_) 
 REFERENCES JBPM_ID_USER (ID_);

ALTER TABLE JBPM_JOB ADD 
  CONSTRAINT FK_JOB_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_JOB ADD   CONSTRAINT FK_JOB_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_JOB ADD   CONSTRAINT FK_JOB_PRINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_JOB ADD   CONSTRAINT FK_JOB_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_JOB ADD   CONSTRAINT FK_JOB_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_);

ALTER TABLE JBPM_LOG ADD 
  CONSTRAINT FK_LOG_SOURCENODE 
 FOREIGN KEY (SOURCENODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_LOG ADD  CONSTRAINT FK_LOG_OLDBYTES 
 FOREIGN KEY (OLDBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_LOG ADD  CONSTRAINT FK_LOG_NEWBYTES 
 FOREIGN KEY (NEWBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_CHILDTOKEN 
 FOREIGN KEY (CHILD_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_DESTNODE 
 FOREIGN KEY (DESTINATIONNODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD  CONSTRAINT FK_LOG_TASKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_SWIMINST 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD  CONSTRAINT FK_LOG_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_LOG (ID_);
ALTER TABLE JBPM_JOB ADD   CONSTRAINT FK_LOG_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_VARINST 
 FOREIGN KEY (VARIABLEINSTANCE_) 
 REFERENCES JBPM_VARIABLEINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD   CONSTRAINT FK_LOG_TRANSITION 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_);

ALTER TABLE JBPM_MODULEDEFINITION ADD 
  CONSTRAINT FK_TSKDEF_START 
 FOREIGN KEY (STARTTASK_) 
 REFERENCES JBPM_TASK (ID_);
 ALTER TABLE JBPM_MODULEDEFINITION ADD  CONSTRAINT FK_MODDEF_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);

ALTER TABLE JBPM_MODULEINSTANCE ADD 
  CONSTRAINT FK_TASKMGTINST_TMD 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_);
 ALTER TABLE JBPM_MODULEINSTANCE ADD  CONSTRAINT FK_MODINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);

ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_PROCST_SBPRCDEF 
 FOREIGN KEY (SUBPROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_NODE_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_NODE_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_NODE_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_DECISION_DELEG 
 FOREIGN KEY (DECISIONDELEGATION) 
 REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_NODE ADD 
  CONSTRAINT FK_NODE_SUPERSTATE 
 FOREIGN KEY (SUPERSTATE_) 
 REFERENCES JBPM_NODE (ID_);

ALTER TABLE JBPM_POOLEDACTOR ADD 
  CONSTRAINT FK_POOLEDACTOR_SLI 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_);

ALTER TABLE JBPM_PROCESSDEFINITION ADD 
  CONSTRAINT FK_PROCDEF_STRTSTA 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_);

ALTER TABLE JBPM_PROCESSINSTANCE ADD 
  CONSTRAINT FK_PROCIN_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD
  CONSTRAINT FK_PROCIN_ROOTTKN 
 FOREIGN KEY (ROOTTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD
  CONSTRAINT FK_PROCIN_SPROCTKN 
 FOREIGN KEY (SUPERPROCESSTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);

ALTER TABLE JBPM_RUNTIMEACTION ADD 
  CONSTRAINT FK_RTACTN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_RUNTIMEACTION ADD 
  CONSTRAINT FK_RTACTN_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_);

ALTER TABLE JBPM_SWIMLANE ADD 
  CONSTRAINT FK_SWL_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_SWIMLANE ADD 
  CONSTRAINT FK_SWL_TSKMGMTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_);

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD 
  CONSTRAINT FK_SWIMLANEINST_TM 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_SWIMLANEINSTANCE ADD 
  CONSTRAINT FK_SWIMLANEINST_SL 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_);

ALTER TABLE JBPM_TASK ADD 
  CONSTRAINT FK_TSK_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_);
ALTER TABLE JBPM_TASK ADD 
 CONSTRAINT FK_TASK_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_TASK ADD 
 CONSTRAINT FK_TASK_TASKNODE 
 FOREIGN KEY (TASKNODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TASK ADD   CONSTRAINT FK_TASK_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_TASK ADD  CONSTRAINT FK_TASK_STARTST 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TASK ADD   CONSTRAINT FK_TASK_TASKMGTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_);
ALTER TABLE JBPM_TASK ADD  CONSTRAINT FK_TASK_SWIMLANE 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_);

ALTER TABLE JBPM_TASKACTORPOOL ADD 
  CONSTRAINT FK_TSKACTPOL_PLACT 
 FOREIGN KEY (POOLEDACTOR_) 
 REFERENCES JBPM_POOLEDACTOR (ID_);
ALTER TABLE JBPM_TASKACTORPOOL ADD   CONSTRAINT FK_TASKACTPL_TSKI 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_);

ALTER TABLE JBPM_TASKCONTROLLER ADD 
  CONSTRAINT FK_TSKCTRL_DELEG 
 FOREIGN KEY (TASKCONTROLLERDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_);

ALTER TABLE JBPM_TASKINSTANCE ADD 
  CONSTRAINT FK_TSKINS_PRCINS 
 FOREIGN KEY (PROCINST_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD   CONSTRAINT FK_TASKINST_TMINST 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD   CONSTRAINT FK_TASKINST_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
 
ALTER TABLE JBPM_TASKINSTANCE ADD   CONSTRAINT FK_TASKINST_SLINST 
 FOREIGN KEY (SWIMLANINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD    CONSTRAINT FK_TASKINST_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_);

ALTER TABLE JBPM_TOKEN ADD 
  CONSTRAINT FK_TOKEN_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_TOKEN ADD   CONSTRAINT FK_TOKEN_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TOKEN ADD   CONSTRAINT FK_TOKEN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_TOKEN ADD   CONSTRAINT FK_TOKEN_SUBPI 
 FOREIGN KEY (SUBPROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD 
  CONSTRAINT FK_TKVARMAP_CTXT 
 FOREIGN KEY (CONTEXTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_TOKENVARIABLEMAP ADD   CONSTRAINT FK_TKVARMAP_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);

ALTER TABLE JBPM_TRANSITION ADD 
  CONSTRAINT FK_TRANSITION_TO 
 FOREIGN KEY (TO_) 
 REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TRANSITION ADD   CONSTRAINT FK_TRANS_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_TRANSITION ADD   CONSTRAINT FK_TRANSITION_FROM 
 FOREIGN KEY (FROM_) 
 REFERENCES JBPM_NODE (ID_);

ALTER TABLE JBPM_VARIABLEACCESS ADD 
  CONSTRAINT FK_VARACC_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD   CONSTRAINT FK_VARACC_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD   CONSTRAINT FK_VARACC_PROCST 
 FOREIGN KEY (PROCESSSTATE_) 
 REFERENCES JBPM_NODE (ID_);

ALTER TABLE JBPM_VARIABLEINSTANCE ADD 
  CONSTRAINT FK_VARINST_TK 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD   CONSTRAINT FK_VARINST_TKVARMP 
 FOREIGN KEY (TOKENVARIABLEMAP_) 
 REFERENCES JBPM_TOKENVARIABLEMAP (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD   CONSTRAINT FK_VARINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD   CONSTRAINT FK_VAR_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_);
 
ALTER TABLE JBPM_VARIABLEINSTANCE ADD   CONSTRAINT FK_BYTEINST_ARRAY 
 FOREIGN KEY (BYTEARRAYVALUE_) 
 REFERENCES JBPM_BYTEARRAY (ID_);


-- CREATE SYNONYM HEL_ACL_CLASS FOR HEL_ACL_CLASS;
-- CREATE SYNONYM HEL_ACL_ENTRY FOR HEL_ACL_ENTRY;
-- CREATE SYNONYM HEL_ACL_OBJECT_IDENTITY FOR HEL_ACL_OBJECT_IDENTITY;
-- CREATE SYNONYM HEL_ACL_SID FOR HEL_ACL_SID;
-- CREATE SYNONYM HEL_ACTION_LOG FOR HEL_ACTION_LOG;
-- CREATE SYNONYM HEL_AREA FOR HEL_AREA;
-- CREATE SYNONYM HEL_AREA_MEMBRE FOR HEL_AREA_MEMBRE;
-- CREATE SYNONYM HEL_AREA_TIPUS FOR HEL_AREA_TIPUS;
-- CREATE SYNONYM HEL_CAMP FOR HEL_CAMP;
-- CREATE SYNONYM HEL_CAMP_AGRUP FOR HEL_CAMP_AGRUP;
-- CREATE SYNONYM HEL_CAMP_REGISTRE FOR HEL_CAMP_REGISTRE;
-- CREATE SYNONYM HEL_CAMP_TASCA FOR HEL_CAMP_TASCA;
-- CREATE SYNONYM HEL_CARREC FOR HEL_CARREC;
-- CREATE SYNONYM HEL_CARREC_JBPMID FOR HEL_CARREC_JBPMID;
-- CREATE SYNONYM HEL_CONSULTA FOR HEL_CONSULTA;
-- CREATE SYNONYM HEL_CONSULTA_CAMP FOR HEL_CONSULTA_CAMP;
-- CREATE SYNONYM HEL_DEFINICIO_PROCES FOR HEL_DEFINICIO_PROCES;
-- CREATE SYNONYM HEL_DOCUMENT FOR HEL_DOCUMENT;
-- CREATE SYNONYM HEL_DOCUMENT_STORE FOR HEL_DOCUMENT_STORE;
-- CREATE SYNONYM HEL_DOCUMENT_TASCA FOR HEL_DOCUMENT_TASCA;
-- CREATE SYNONYM HEL_DOMINI FOR HEL_DOMINI;
-- CREATE SYNONYM HEL_ENTORN FOR HEL_ENTORN;
-- CREATE SYNONYM HEL_ENUMERACIO FOR HEL_ENUMERACIO;
-- CREATE SYNONYM HEL_ESTAT FOR HEL_ESTAT;
-- CREATE SYNONYM HEL_EXPEDIENT FOR HEL_EXPEDIENT;
-- CREATE SYNONYM HEL_EXPEDIENT_RELS FOR HEL_EXPEDIENT_RELS;
-- CREATE SYNONYM HEL_EXPEDIENT_TIPUS FOR HEL_EXPEDIENT_TIPUS;
-- CREATE SYNONYM HEL_FESTIU FOR HEL_FESTIU;
-- CREATE SYNONYM HEL_FIRMA_TASCA FOR HEL_FIRMA_TASCA;
-- CREATE SYNONYM HEL_FORMEXT FOR HEL_FORMEXT;
-- CREATE SYNONYM HEL_IDGEN FOR HEL_IDGEN;
-- CREATE SYNONYM HEL_INDEX FOR HEL_INDEX;
-- CREATE SYNONYM HEL_PERMIS FOR HEL_PERMIS;
-- CREATE SYNONYM HEL_PERSONA FOR HEL_PERSONA;
-- CREATE SYNONYM HEL_PORTASIGNATURES FOR HEL_PORTASIGNATURES;
-- CREATE SYNONYM HEL_REGISTRE FOR HEL_REGISTRE;
-- CREATE SYNONYM HEL_TASCA FOR HEL_TASCA;
-- CREATE SYNONYM HEL_TERMINI FOR HEL_TERMINI;
-- CREATE SYNONYM HEL_TERMINI_INICIAT FOR HEL_TERMINI_INICIAT;
-- CREATE SYNONYM HEL_USUARI FOR HEL_USUARI;
-- CREATE SYNONYM HEL_USUARI_PERMIS FOR HEL_USUARI_PERMIS;
-- CREATE SYNONYM HEL_USUARI_PREFS FOR HEL_USUARI_PREFS;
-- CREATE SYNONYM HEL_VALIDACIO FOR HEL_VALIDACIO;
-- CREATE SYNONYM HEL_VERSIO FOR HEL_VERSIO;
-- CREATE SYNONYM HIBERNATE_SEQUENCE FOR HIBERNATE_SEQUENCE;
-- CREATE SYNONYM JBPM_ACTION FOR JBPM_ACTION;
-- CREATE SYNONYM JBPM_BYTEARRAY FOR JBPM_BYTEARRAY;
-- CREATE SYNONYM JBPM_BYTEBLOCK FOR JBPM_BYTEBLOCK;
-- CREATE SYNONYM JBPM_COMMENT FOR JBPM_COMMENT;
-- CREATE SYNONYM JBPM_DECISIONCONDITIONS FOR JBPM_DECISIONCONDITIONS;
-- CREATE SYNONYM JBPM_DELEGATION FOR JBPM_DELEGATION;
-- CREATE SYNONYM JBPM_EVENT FOR JBPM_EVENT;
-- CREATE SYNONYM JBPM_EXCEPTIONHANDLER FOR JBPM_EXCEPTIONHANDLER;
-- CREATE SYNONYM JBPM_ID_GROUP FOR JBPM_ID_GROUP;
-- CREATE SYNONYM JBPM_ID_MEMBERSHIP FOR JBPM_ID_MEMBERSHIP;
-- CREATE SYNONYM JBPM_ID_PERMISSIONS FOR JBPM_ID_PERMISSIONS;
-- CREATE SYNONYM JBPM_ID_USER FOR JBPM_ID_USER;
-- CREATE SYNONYM JBPM_JOB FOR JBPM_JOB;
-- CREATE SYNONYM JBPM_LOG FOR JBPM_LOG;
-- CREATE SYNONYM JBPM_MODULEDEFINITION FOR JBPM_MODULEDEFINITION;
-- CREATE SYNONYM JBPM_MODULEINSTANCE FOR JBPM_MODULEINSTANCE;
-- CREATE SYNONYM JBPM_NODE FOR JBPM_NODE;
-- CREATE SYNONYM JBPM_POOLEDACTOR FOR JBPM_POOLEDACTOR;
-- CREATE SYNONYM JBPM_PROCESSDEFINITION FOR JBPM_PROCESSDEFINITION;
-- CREATE SYNONYM JBPM_PROCESSINSTANCE FOR JBPM_PROCESSINSTANCE;
-- CREATE SYNONYM JBPM_RUNTIMEACTION FOR JBPM_RUNTIMEACTION;
-- CREATE SYNONYM JBPM_SWIMLANE FOR JBPM_SWIMLANE;
-- CREATE SYNONYM JBPM_SWIMLANEINSTANCE FOR JBPM_SWIMLANEINSTANCE;
-- CREATE SYNONYM JBPM_TASK FOR JBPM_TASK;
-- CREATE SYNONYM JBPM_TASKACTORPOOL FOR JBPM_TASKACTORPOOL;
-- CREATE SYNONYM JBPM_TASKCONTROLLER FOR JBPM_TASKCONTROLLER;
-- CREATE SYNONYM JBPM_TASKINSTANCE FOR JBPM_TASKINSTANCE;
-- CREATE SYNONYM JBPM_TOKEN FOR JBPM_TOKEN;
-- CREATE SYNONYM JBPM_TOKENVARIABLEMAP FOR JBPM_TOKENVARIABLEMAP;
-- CREATE SYNONYM JBPM_TRANSITION FOR JBPM_TRANSITION;
-- CREATE SYNONYM JBPM_VARIABLEACCESS FOR JBPM_VARIABLEACCESS;
-- CREATE SYNONYM JBPM_VARIABLEINSTANCE FOR JBPM_VARIABLEINSTANCE;

GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_CLASS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_ENTRY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_OBJECT_IDENTITY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACL_SID TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ACTION_LOG TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA_MEMBRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_AREA_TIPUS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_AGRUP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_REGISTRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CAMP_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CARREC TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CARREC_JBPMID TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CONSULTA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_CONSULTA_CAMP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DEFINICIO_PROCES TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT_STORE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOCUMENT_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_DOMINI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ENTORN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ENUMERACIO TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_ESTAT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT_RELS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT_TIPUS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FESTIU TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FIRMA_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_FORMEXT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_IDGEN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_INDEX TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PERMIS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PERSONA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PORTASIGNATURES TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_REGISTRE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TASCA TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TERMINI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TERMINI_INICIAT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI_PERMIS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_USUARI_PREFS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_VALIDACIO TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_VERSIO TO WWW_HELIUM;
GRANT SELECT ON HIBERNATE_SEQUENCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ACTION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_BYTEARRAY TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_BYTEBLOCK TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_COMMENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_DECISIONCONDITIONS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_DELEGATION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_EVENT TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_EXCEPTIONHANDLER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_GROUP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_MEMBERSHIP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_PERMISSIONS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_ID_USER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_JOB TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_LOG TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_MODULEDEFINITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_MODULEINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_NODE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_POOLEDACTOR TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_PROCESSDEFINITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_PROCESSINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_RUNTIMEACTION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_SWIMLANE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_SWIMLANEINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASK TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKACTORPOOL TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKCONTROLLER TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TASKINSTANCE TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TOKEN TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TOKENVARIABLEMAP TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_TRANSITION TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_VARIABLEACCESS TO WWW_HELIUM;
GRANT SELECT, UPDATE, INSERT, DELETE ON JBPM_VARIABLEINSTANCE TO WWW_HELIUM;
